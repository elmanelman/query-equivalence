import dataclasses


@dataclasses.dataclass
class Case:
    name: str
    query1: str
    query2: str

    def __str__(self):
        return self.name


CASES = [
    Case(
        "testAddRedundantSemiJoinRule",
        "SELECT 1 FROM EMP AS EMP INNER JOIN DEPT AS DEPT ON EMP.DEPTNO = DEPT.DEPTNO",
        "SELECT 1 FROM EMP AS EMP0 INNER JOIN DEPT AS DEPT0 ON EMP0.DEPTNO = DEPT0.DEPTNO INNER JOIN DEPT AS DEPT1 ON EMP0.DEPTNO = DEPT1.DEPTNO",
    ),
    Case(
        "testAggregateConstantKeyRule",
        "SELECT COUNT(*) AS C FROM EMP AS EMP WHERE EMP.DEPTNO = 10 GROUP BY EMP.DEPTNO, EMP.SAL",
        "SELECT COUNT(*) AS C FROM EMP AS EMP0 WHERE EMP0.DEPTNO = 10 GROUP BY EMP0.SAL",
    ),
    Case(
        "testAggregateConstantKeyRule2",
        "SELECT COUNT(*) AS C FROM EMP AS EMP WHERE EMP.DEPTNO = 10 GROUP BY EMP.DEPTNO",
        "SELECT COUNT(*) AS C FROM EMP AS EMP0 WHERE EMP0.DEPTNO = 10 GROUP BY EMP0.DEPTNO",
    ),
    Case(
        "testAggregateConstantKeyRule3",
        "SELECT EMP.JOB FROM EMP AS EMP WHERE EMP.SAL IS NULL AND EMP.JOB = 'Clerk' GROUP BY EMP.SAL, EMP.JOB HAVING COUNT(*) > 3",
        "SELECT t7.JOB FROM (SELECT EMP0.SAL, 'Clerk' AS JOB, COUNT(*) AS CNT FROM EMP AS EMP0 WHERE EMP0.SAL IS NULL AND EMP0.JOB = 'Clerk' GROUP BY EMP0.SAL) AS t7 WHERE t7.CNT > 3",
    ),
    Case(
        "testAggregateGroupingSetsProjectMerge",
        "SELECT EMP.DEPTNO AS X, SUM(EMP.SAL), EMP.EMPNO AS Y FROM EMP AS EMP GROUP BY EMP.DEPTNO, EMP.EMPNO",
        "SELECT EMP0.DEPTNO AS X, SUM(EMP0.SAL), EMP0.EMPNO AS Y FROM EMP AS EMP0 GROUP BY EMP0.EMPNO, EMP0.DEPTNO",
    ),
    Case(
        "testAggregateProjectMerge",
        "SELECT EMP.DEPTNO AS X, SUM(EMP.SAL), EMP.EMPNO AS Y FROM EMP AS EMP GROUP BY EMP.DEPTNO, EMP.EMPNO",
        "SELECT EMP0.DEPTNO AS X, SUM(EMP0.SAL), EMP0.EMPNO AS Y FROM EMP AS EMP0 GROUP BY EMP0.EMPNO, EMP0.DEPTNO",
    ),
    Case(
        "testAggregateProjectPullUpConstants",
        "SELECT EMP.JOB, EMP.EMPNO, EMP.SAL, SUM(EMP.SAL) AS S FROM EMP AS EMP WHERE EMP.EMPNO = 10 GROUP BY EMP.JOB, EMP.EMPNO, EMP.SAL",
        "SELECT EMP0.JOB, 10 AS EMPNO, EMP0.SAL, SUM(EMP0.SAL) AS S FROM EMP AS EMP0 WHERE EMP0.EMPNO = 10 GROUP BY EMP0.JOB, EMP0.SAL",
    ),
    Case(
        "testAlreadyFalseEliminatesFilter",
        "SELECT * FROM (VALUES  (1, 2)) AS t WHERE FALSE",
        "SELECT * FROM (VALUES  (1, 2)) AS t1 WHERE FALSE",
    ),
    Case(
        "testCastInAggregateExpandDistinctAggregatesRule",
        "SELECT t0.NAME, SUM(DISTINCT t0.CN), SUM(DISTINCT t0.SM) FROM (SELECT DEPT.NAME, COUNT(*) AS CN, SUM(DEPT.DEPTNO) AS SM FROM DEPT AS DEPT GROUP BY DEPT.NAME) AS t0 GROUP BY t0.NAME",
        "SELECT t3.NAME, CAST(SUM(t3.CN) AS BIGINT), CAST(SUM(t3.SM) AS INTEGER) FROM (SELECT DEPT0.NAME, COUNT(*) AS CN, SUM(DEPT0.DEPTNO) AS SM FROM DEPT AS DEPT0 GROUP BY DEPT0.NAME) AS t3 GROUP BY t3.NAME",
    ),
    Case(
        "testCastInAggregateReduceFunctions",
        "SELECT DEPT.NAME, STDDEV_POP(DEPT.DEPTNO), AVG(DEPT.DEPTNO), STDDEV_SAMP(DEPT.DEPTNO), VAR_POP(DEPT.DEPTNO), VAR_SAMP(DEPT.DEPTNO) FROM DEPT AS DEPT GROUP BY DEPT.NAME",
        "SELECT DEPT0.NAME, CAST(POWER((SUM(DEPT0.DEPTNO * DEPT0.DEPTNO) - SUM(DEPT0.DEPTNO) * SUM(DEPT0.DEPTNO) / COUNT(*)) / COUNT(*), 0.5) AS INTEGER), CAST(SUM(DEPT0.DEPTNO) / COUNT(*) AS INTEGER), CAST(POWER((SUM(DEPT0.DEPTNO * DEPT0.DEPTNO) - SUM(DEPT0.DEPTNO) * SUM(DEPT0.DEPTNO) / COUNT(*)) / CASE WHEN COUNT(*) = 1 THEN NULL ELSE COUNT(*) - 1 END, 0.5) AS INTEGER), CAST((SUM(DEPT0.DEPTNO * DEPT0.DEPTNO) - SUM(DEPT0.DEPTNO) * SUM(DEPT0.DEPTNO) / COUNT(*)) / COUNT(*) AS INTEGER), CAST((SUM(DEPT0.DEPTNO * DEPT0.DEPTNO) - SUM(DEPT0.DEPTNO) * SUM(DEPT0.DEPTNO) / COUNT(*)) / CASE WHEN COUNT(*) = 1 THEN NULL ELSE COUNT(*) - 1 END AS INTEGER) FROM DEPT AS DEPT0 GROUP BY DEPT0.NAME",
    ),
    Case(
        "testDecorrelateExists",
        "SELECT * FROM EMP AS EMP WHERE EXISTS (SELECT * FROM EMP AS EMP0 WHERE EMP.DEPTNO = EMP0.DEPTNO)",
        "SELECT EMP1.EMPNO, EMP1.ENAME, EMP1.JOB, EMP1.MGR, EMP1.HIREDATE, EMP1.SAL, EMP1.COMM, EMP1.DEPTNO, EMP1.SLACKER FROM EMP AS EMP1 INNER JOIN (SELECT EMP2.DEPTNO, TRUE AS X FROM EMP AS EMP2 GROUP BY EMP2.DEPTNO) AS t4 ON EMP1.DEPTNO = t4.DEPTNO",
    ),
    Case(
        "testDecorrelateTwoExists",
        "SELECT * FROM EMP AS EMP WHERE EXISTS (SELECT * FROM EMP AS EMP0 WHERE EMP.DEPTNO = EMP0.DEPTNO) AND NOT EXISTS (SELECT * FROM EMP AS EMP1 WHERE EMP1.JOB = EMP.JOB AND EMP1.SAL = 34)",
        "SELECT EMP2.EMPNO, EMP2.ENAME, EMP2.JOB, EMP2.MGR, EMP2.HIREDATE, EMP2.SAL, EMP2.COMM, EMP2.DEPTNO, EMP2.SLACKER FROM EMP AS EMP2 INNER JOIN (SELECT EMP3.DEPTNO, TRUE AS X FROM EMP AS EMP3 GROUP BY EMP3.DEPTNO) AS t5 ON EMP2.DEPTNO = t5.DEPTNO LEFT JOIN (SELECT EMP4.JOB, TRUE AS X FROM EMP AS EMP4 WHERE EMP4.SAL = 34 GROUP BY EMP4.JOB) AS t10 ON EMP2.JOB = t10.JOB WHERE t10.X IS NULL",
    ),
    Case(
        "testDecorrelateTwoIn",
        "SELECT EMP.SAL FROM EMP AS EMP WHERE EMP.EMPNO IN (SELECT DEPT.DEPTNO FROM DEPT AS DEPT WHERE EMP.JOB = DEPT.NAME) AND EMP.EMPNO IN (SELECT EMP0.EMPNO FROM EMP AS EMP0 WHERE EMP.ENAME = EMP0.ENAME)",
        "SELECT EMP1.SAL FROM EMP AS EMP1 INNER JOIN DEPT AS DEPT0 ON EMP1.JOB = DEPT0.NAME AND EMP1.EMPNO = DEPT0.DEPTNO INNER JOIN (SELECT EMP2.EMPNO, EMP2.ENAME FROM EMP AS EMP2) AS t5 ON EMP1.ENAME = t5.ENAME AND EMP1.EMPNO = t5.EMPNO",
    ),
    Case(
        "testDistinctCountGroupingSets1",
        "SELECT EMP.DEPTNO, EMP.JOB, COUNT(DISTINCT EMP.ENAME) FROM EMP AS EMP GROUP BY EMP.DEPTNO, EMP.JOB",
        "SELECT EMP0.DEPTNO, EMP0.JOB, COUNT(EMP0.ENAME) FROM EMP AS EMP0 GROUP BY EMP0.DEPTNO, EMP0.JOB",
    ),
    Case(
        "testDistinctCountMultiple",
        "SELECT EMP.DEPTNO, COUNT(DISTINCT EMP.ENAME), COUNT(DISTINCT EMP.JOB) FROM EMP AS EMP GROUP BY EMP.DEPTNO",
        "SELECT EMP0.DEPTNO, COUNT(EMP0.ENAME), COUNT(EMP0.JOB) FROM EMP AS EMP0 GROUP BY EMP0.DEPTNO",
    ),
    Case(
        "testDistinctCountMultipleNoGroup",
        "SELECT COUNT(DISTINCT EMP.ENAME), COUNT(DISTINCT EMP.JOB) FROM EMP AS EMP",
        "SELECT COUNT(EMP0.ENAME), COUNT(EMP0.JOB) FROM EMP AS EMP0 GROUP BY EMP0.ENAME, EMP0.JOB",
    ),
    Case(
        "testDistinctWithGrouping",
        "SELECT EMP.SAL, SUM(EMP.COMM), MIN(EMP.COMM), SUM(DISTINCT EMP.SAL) FROM EMP AS EMP GROUP BY EMP.SAL",
        "SELECT t2.SAL, SUM(SUM_EMP0_COMM), MIN(MIN_EMP0_COMM), SUM(t2.SAL) FROM (SELECT EMP0.SAL, SUM(EMP0.COMM) AS SUM_EMP0_COMM, MIN(EMP0.COMM) AS MIN_EMP0_COMM FROM EMP AS EMP0 GROUP BY EMP0.SAL) AS t2 GROUP BY t2.SAL",
    ),
    Case(
        "testEmptyAggregateEmptyKey",
        "SELECT SUM(t.EMPNO) FROM EMP AS t WHERE FALSE",
        "SELECT SUM(t1.EMPNO) FROM EMP AS t1 WHERE FALSE",
    ),
    Case(
        "testEmptyAggregateEmptyKeyWithAggregateValuesRule",
        "SELECT COUNT(*), SUM(t.EMPNO) FROM (SELECT * FROM EMP WHERE FALSE) AS t",
        "SELECT * FROM (VALUES  (0, NULL)) AS t1",
    ),
    Case(
        "testEmptyFilterProjectUnion",
        "SELECT * FROM (SELECT * FROM (VALUES  (10, 1),  (30, 3)) AS t UNION ALL SELECT * FROM (VALUES  (20, 2)) AS t0) AS t1 WHERE t1.COLUMN1 + t1.COLUMN2 > 30",
        "SELECT * FROM (VALUES  (30, 3)) AS t3",
    ),
    Case(
        "testEmptyIntersect",
        "SELECT * FROM (SELECT * FROM (VALUES  (30, 3)) AS t INTERSECT SELECT * FROM (VALUES  (10, 1),  (30, 3)) AS t0 WHERE t0.COLUMN1 > 50) AS t2 INTERSECT SELECT * FROM (VALUES  (30, 3)) AS t3",
        "SELECT * FROM (VALUES  (30, 3)) AS t5 WHERE FALSE",
    ),
    Case(
        "testEmptyJoin",
        "SELECT * FROM (SELECT * FROM EMP AS EMP WHERE FALSE) AS t INNER JOIN DEPT AS DEPT ON t.DEPTNO = DEPT.DEPTNO",
        "SELECT * FROM (SELECT * FROM EMP AS EMP) AS t INNER JOIN DEPT AS DEPT ON t.DEPTNO = DEPT.DEPTNO WHERE FALSE",
    ),
    Case(
        "testEmptyJoinLeft",
        "SELECT * FROM (SELECT * FROM EMP AS EMP WHERE FALSE) AS t LEFT JOIN DEPT AS DEPT ON t.DEPTNO = DEPT.DEPTNO",
        "SELECT * FROM (SELECT * FROM EMP AS EMP) AS t LEFT JOIN DEPT AS DEPT ON t.DEPTNO = DEPT.DEPTNO WHERE FALSE",
    ),
    Case(
        "testEmptyJoinRight",
        "SELECT * FROM (SELECT * FROM EMP AS EMP WHERE FALSE) AS t RIGHT JOIN DEPT AS DEPT ON t.DEPTNO = DEPT.DEPTNO",
        "SELECT * FROM (SELECT * FROM EMP AS EMP) AS t0 RIGHT JOIN DEPT AS DEPT0 ON t0.DEPTNO = DEPT0.DEPTNO WHERE FALSE",
    ),
    Case(
        "testEmptyMinus",
        "SELECT * FROM (SELECT * FROM (VALUES  (30, 3)) AS t WHERE t.COLUMN1 > 30 EXCEPT SELECT * FROM (VALUES  (20, 2)) AS t1) AS t2 EXCEPT SELECT * FROM (VALUES  (40, 4)) AS t3",
        "SELECT * FROM (VALUES (30, 3)) AS t5 WHERE FALSE",
    ),
    Case(
        "testEmptyMinus2",
        "SELECT * FROM (SELECT * FROM (SELECT * FROM (VALUES  (30, 3)) AS t EXCEPT SELECT * FROM (VALUES  (20, 2)) AS t0 WHERE t0.COLUMN1 > 30) AS t2 EXCEPT SELECT * FROM (VALUES  (40, 4)) AS t3) AS t4 EXCEPT SELECT * FROM (VALUES  (50, 5)) AS t5 WHERE t5.COLUMN1 > 50",
        "SELECT * FROM (VALUES  (30, 3)) AS t8 EXCEPT SELECT * FROM (VALUES  (40, 4)) AS t9",
    ),
    Case(
        "testEmptyProject",
        "SELECT t.COLUMN1 + t.COLUMN2 + t.COLUMN1 FROM (VALUES  (10, 1),  (30, 3)) AS t WHERE t.COLUMN1 + t.COLUMN2 > 50",
        "SELECT t.COLUMN1 + t.COLUMN2 + t.COLUMN1 FROM (VALUES  (10, 1),  (30, 3)) AS t WHERE FALSE",
    ),
    Case(
        "testEmptyProject2",
        "SELECT t.COLUMN1 + t.COLUMN2 + t.COLUMN1 FROM (VALUES  (10, 1),  (30, 3)) AS t WHERE t.COLUMN1 + t.COLUMN2 > 50",
        "SELECT * FROM (VALUES  (10, 1),  (30, 3)) AS t WHERE FALSE",
    ),
    Case(
        "testEmptySort",
        "SELECT * FROM EMP AS EMP WHERE FALSE ORDER BY EMP.DEPTNO",
        "SELECT * FROM EMP AS EMP WHERE FALSE ORDER BY EMP.DEPTNO",
    ),
    Case(
        "testEmptySortLimitZero",
        "SELECT * FROM EMP AS EMP ORDER BY EMP.DEPTNO FETCH NEXT 0 ROWS ONLY",
        "SELECT * FROM EMP AS t1 WHERE FALSE",
    ),
    Case(
        "testExpandFilterExists",
        "SELECT EMP.EMPNO FROM EMP AS EMP WHERE EXISTS (SELECT * FROM EMP AS EMP0 WHERE EMP0.EMPNO < 20) OR EMP.SAL < 100",
        "SELECT EMP1.EMPNO FROM EMP AS EMP1 LEFT JOIN (SELECT TRUE AS i FROM EMP AS EMP2 WHERE EMP2.EMPNO < 20 GROUP BY TRUE) AS t4 ON TRUE WHERE t4.i IS NOT NULL OR EMP1.SAL < 100",
    ),
    Case(
        "testExpandFilterExistsSimple",
        "SELECT EMP.EMPNO FROM EMP AS EMP WHERE EXISTS (SELECT * FROM EMP AS EMP0 WHERE EMP0.EMPNO < 20)",
        "SELECT EMP1.EMPNO FROM EMP AS EMP1, (SELECT TRUE AS i FROM EMP AS EMP2 WHERE EMP2.EMPNO < 20 GROUP BY TRUE) AS t4",
    ),
    Case(
        "testExpandFilterExistsSimpleAnd",
        "SELECT EMP.EMPNO FROM EMP AS EMP WHERE EXISTS (SELECT * FROM EMP AS EMP0 WHERE EMP0.EMPNO < 20) AND EMP.SAL < 100",
        "SELECT EMP1.EMPNO FROM EMP AS EMP1, (SELECT TRUE AS i FROM EMP AS EMP2 WHERE EMP2.EMPNO < 20 GROUP BY TRUE) AS t4 WHERE EMP1.SAL < 100",
    ),
    Case(
        "testExpandFilterIn",
        "SELECT EMP.EMPNO FROM EMP AS EMP WHERE EMP.DEPTNO IN (SELECT EMP0.DEPTNO FROM EMP AS EMP0 WHERE EMP0.EMPNO < 20) OR EMP.SAL < 100",
        "SELECT EMP1.EMPNO FROM EMP AS EMP1 LEFT JOIN (SELECT EMP2.DEPTNO, TRUE AS i FROM EMP AS EMP2 WHERE EMP2.EMPNO < 20 GROUP BY EMP2.DEPTNO, TRUE) AS t6 ON EMP1.DEPTNO = t6.DEPTNO WHERE t6.i IS NOT NULL OR EMP1.SAL < 100",
    ),
    Case(
        "testExpandFilterInComposite",
        "SELECT EMP.EMPNO FROM EMP AS EMP WHERE (EMP.EMPNO, EMP.DEPTNO) IN (SELECT EMP0.EMPNO, EMP0.DEPTNO FROM EMP AS EMP0 WHERE EMP0.EMPNO < 20) OR EMP.SAL < 100",
        "SELECT EMP1.EMPNO FROM EMP AS EMP1 LEFT JOIN (SELECT EMP2.EMPNO, EMP2.DEPTNO, TRUE AS i FROM EMP AS EMP2 WHERE EMP2.EMPNO < 20) AS t5 ON EMP1.EMPNO = t5.EMPNO AND EMP1.DEPTNO = t5.DEPTNO WHERE t5.i IS NOT NULL OR EMP1.SAL < 100",
    ),
    Case(
        "testExpandFilterScalar",
        "SELECT EMP.EMPNO FROM EMP AS EMP WHERE (((SELECT EMP0.DEPTNO FROM EMP AS EMP0 WHERE EMP0.EMPNO < 20))) < (((SELECT EMP1.DEPTNO FROM EMP AS EMP1 WHERE EMP1.EMPNO > 100))) OR EMP.SAL < 100",
        "SELECT EMP2.EMPNO FROM EMP AS EMP2 LEFT JOIN (SELECT EMP3.DEPTNO AS DEPTNO FROM EMP AS EMP3 WHERE EMP3.EMPNO < 20) AS t7 ON TRUE LEFT JOIN (SELECT EMP4.DEPTNO AS DEPTNO FROM EMP AS EMP4 WHERE EMP4.EMPNO > 100) AS t10 ON TRUE WHERE t7.DEPTNO < t10.DEPTNO OR EMP2.SAL < 100",
    ),
    Case(
        "testExpandJoinScalar",
        "SELECT EMP.EMPNO FROM EMP AS EMP LEFT JOIN DEPT AS DEPT ON (((SELECT EMP0.DEPTNO FROM EMP AS EMP0 WHERE EMP0.EMPNO < 20))) < (((SELECT EMP1.DEPTNO FROM EMP AS EMP1 WHERE EMP1.EMPNO > 100)))",
        "SELECT EMP2.EMPNO FROM EMP AS EMP2 LEFT JOIN (DEPT AS DEPT0 LEFT JOIN (SELECT EMP3.DEPTNO FROM EMP AS EMP3 WHERE EMP3.EMPNO < 20) AS t6 ON TRUE LEFT JOIN (SELECT EMP4.DEPTNO FROM EMP AS EMP4 WHERE EMP4.EMPNO > 100) AS t9 ON TRUE) ON t6.DEPTNO < t9.DEPTNO",
    ),
    Case(
        "testExpandProjectExists",
        "SELECT EMP.EMPNO, EXISTS (SELECT * FROM EMP AS EMP0 WHERE EMP0.EMPNO < 20) AS D FROM EMP AS EMP",
        "SELECT EMP1.EMPNO, CASE WHEN t3.i IS NOT NULL THEN TRUE ELSE FALSE END AS D FROM EMP AS EMP1 LEFT JOIN (SELECT TRUE AS i FROM EMP AS EMP2 WHERE EMP2.EMPNO < 20 GROUP BY TRUE) AS t3 ON TRUE",
    ),
    Case(
        "testExpandProjectIn",
        "SELECT EMP.EMPNO, EMP.DEPTNO IN (SELECT EMP0.DEPTNO FROM EMP AS EMP0 WHERE EMP0.EMPNO < 20) AS D FROM EMP AS EMP",
        "SELECT EMP1.EMPNO, CASE WHEN t5.i IS NOT NULL THEN TRUE ELSE FALSE END AS D FROM EMP AS EMP1 LEFT JOIN (SELECT EMP2.DEPTNO, TRUE AS i FROM EMP AS EMP2 WHERE EMP2.EMPNO < 20 GROUP BY EMP2.DEPTNO, TRUE) AS t5 ON EMP1.DEPTNO = t5.DEPTNO",
    ),
    Case(
        "testExpandProjectInComposite",
        "SELECT EMP.EMPNO, (EMP.EMPNO, EMP.DEPTNO) IN (SELECT EMP0.EMPNO, EMP0.DEPTNO FROM EMP AS EMP0 WHERE EMP0.EMPNO < 20) AS D FROM EMP AS EMP",
        "SELECT EMP1.EMPNO, CASE WHEN t4.i IS NOT NULL THEN TRUE ELSE FALSE END AS D FROM EMP AS EMP1 LEFT JOIN (SELECT EMP2.EMPNO, EMP2.DEPTNO, TRUE AS i FROM EMP AS EMP2 WHERE EMP2.EMPNO < 20) AS t4 ON EMP1.EMPNO = t4.EMPNO AND EMP1.DEPTNO = t4.DEPTNO",
    ),
    Case(
        "testExpandProjectScalar",
        "SELECT EMP.EMPNO, (((SELECT EMP0.DEPTNO FROM EMP AS EMP0 WHERE EMP0.EMPNO < 20))) AS D FROM EMP AS EMP",
        "SELECT EMP1.EMPNO, t4.DEPTNO AS D FROM EMP AS EMP1 LEFT JOIN (SELECT EMP2.DEPTNO FROM EMP AS EMP2 WHERE EMP2.EMPNO < 20) AS t4 ON TRUE",
    ),
    Case(
        "testExtractJoinFilterRule",
        "SELECT 1 FROM EMP AS EMP INNER JOIN DEPT AS DEPT ON EMP.DEPTNO = DEPT.DEPTNO",
        "SELECT 1 FROM EMP AS EMP0, DEPT AS DEPT0 WHERE EMP0.DEPTNO = DEPT0.DEPTNO",
    ),
    Case(
        "testFullOuterJoinSimplificationToInner",
        "SELECT 1 FROM DEPT AS DEPT FULL JOIN EMP AS EMP ON DEPT.DEPTNO = EMP.DEPTNO WHERE DEPT.NAME = 'Charlie' AND EMP.SAL > 100",
        "SELECT 1 FROM (SELECT * FROM DEPT AS DEPT0 WHERE DEPT0.NAME = 'Charlie') AS t1 INNER JOIN (SELECT * FROM EMP AS EMP0 WHERE EMP0.SAL > 100) AS t2 ON t1.DEPTNO = t2.DEPTNO",
    ),
    Case(
        "testFullOuterJoinSimplificationToLeftOuter",
        "SELECT 1 FROM DEPT AS DEPT FULL JOIN EMP AS EMP ON DEPT.DEPTNO = EMP.DEPTNO WHERE DEPT.NAME = 'Charlie'",
        "SELECT 1 FROM (SELECT * FROM DEPT AS DEPT0 WHERE DEPT0.NAME = 'Charlie') AS t1 LEFT JOIN EMP AS EMP0 ON t1.DEPTNO = EMP0.DEPTNO",
    ),
    Case(
        "testFullOuterJoinSimplificationToRightOuter",
        "SELECT 1 FROM DEPT AS DEPT FULL JOIN EMP AS EMP ON DEPT.DEPTNO = EMP.DEPTNO WHERE EMP.SAL > 100",
        "SELECT 1 FROM DEPT AS DEPT0 RIGHT JOIN (SELECT * FROM EMP AS EMP0 WHERE EMP0.SAL > 100) AS t1 ON DEPT0.DEPTNO = t1.DEPTNO",
    ),
    Case(
        "testIntersectToDistinct",
        "SELECT * FROM (SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO = 10 INTERSECT SELECT * FROM EMP AS EMP0 WHERE EMP0.DEPTNO = 20) AS t1 INTERSECT SELECT * FROM EMP AS EMP1 WHERE EMP1.DEPTNO = 30",
        "SELECT t10.EMPNO, t10.ENAME, t10.JOB, t10.MGR, t10.HIREDATE, t10.SAL, t10.COMM, t10.DEPTNO, t10.SLACKER FROM (SELECT EMP2.EMPNO, EMP2.ENAME, EMP2.JOB, EMP2.MGR, EMP2.HIREDATE, EMP2.SAL, EMP2.COMM, EMP2.DEPTNO, EMP2.SLACKER, COUNT(*) AS CNT FROM EMP AS EMP2 WHERE EMP2.DEPTNO = 10 GROUP BY EMP2.EMPNO, EMP2.ENAME, EMP2.JOB, EMP2.MGR, EMP2.HIREDATE, EMP2.SAL, EMP2.COMM, EMP2.DEPTNO, EMP2.SLACKER UNION ALL SELECT EMP3.EMPNO, EMP3.ENAME, EMP3.JOB, EMP3.MGR, EMP3.HIREDATE, EMP3.SAL, EMP3.COMM, EMP3.DEPTNO, EMP3.SLACKER, COUNT(*) AS CNT FROM EMP AS EMP3 WHERE EMP3.DEPTNO = 20 GROUP BY EMP3.EMPNO, EMP3.ENAME, EMP3.JOB, EMP3.MGR, EMP3.HIREDATE, EMP3.SAL, EMP3.COMM, EMP3.DEPTNO, EMP3.SLACKER UNION ALL SELECT EMP4.EMPNO, EMP4.ENAME, EMP4.JOB, EMP4.MGR, EMP4.HIREDATE, EMP4.SAL, EMP4.COMM, EMP4.DEPTNO, EMP4.SLACKER, COUNT(*) AS CNT FROM EMP AS EMP4 WHERE EMP4.DEPTNO = 30 GROUP BY EMP4.EMPNO, EMP4.ENAME, EMP4.JOB, EMP4.MGR, EMP4.HIREDATE, EMP4.SAL, EMP4.COMM, EMP4.DEPTNO, EMP4.SLACKER) AS t10 GROUP BY t10.EMPNO, t10.ENAME, t10.JOB, t10.MGR, t10.HIREDATE, t10.SAL, t10.COMM, t10.DEPTNO, t10.SLACKER HAVING COUNT(*) = 3",
    ),
    Case(
        "testIntersectToDistinctAll",
        "SELECT * FROM (SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO = 10 INTERSECT SELECT * FROM EMP AS EMP0 WHERE EMP0.DEPTNO = 20) AS t1 INTERSECT ALL SELECT * FROM EMP AS EMP1 WHERE EMP1.DEPTNO = 30",
        "SELECT t8.EMPNO, t8.ENAME, t8.JOB, t8.MGR, t8.HIREDATE, t8.SAL, t8.COMM, t8.DEPTNO, t8.SLACKER FROM (SELECT EMP2.EMPNO, EMP2.ENAME, EMP2.JOB, EMP2.MGR, EMP2.HIREDATE, EMP2.SAL, EMP2.COMM, EMP2.DEPTNO, EMP2.SLACKER, COUNT(*) FROM EMP AS EMP2 WHERE EMP2.DEPTNO = 10 GROUP BY EMP2.EMPNO, EMP2.ENAME, EMP2.JOB, EMP2.MGR, EMP2.HIREDATE, EMP2.SAL, EMP2.COMM, EMP2.DEPTNO, EMP2.SLACKER UNION ALL SELECT EMP3.EMPNO, EMP3.ENAME, EMP3.JOB, EMP3.MGR, EMP3.HIREDATE, EMP3.SAL, EMP3.COMM, EMP3.DEPTNO, EMP3.SLACKER, COUNT(*) FROM EMP AS EMP3 WHERE EMP3.DEPTNO = 20 GROUP BY EMP3.EMPNO, EMP3.ENAME, EMP3.JOB, EMP3.MGR, EMP3.HIREDATE, EMP3.SAL, EMP3.COMM, EMP3.DEPTNO, EMP3.SLACKER) AS t8 GROUP BY t8.EMPNO, t8.ENAME, t8.JOB, t8.MGR, t8.HIREDATE, t8.SAL, t8.COMM, t8.DEPTNO, t8.SLACKER HAVING COUNT(*) = 2 INTERSECT ALL SELECT * FROM EMP AS EMP4 WHERE EMP4.DEPTNO = 30",
    ),
    Case(
        "testLeftOuterJoinSimplificationToInner",
        "SELECT 1 FROM DEPT AS DEPT LEFT JOIN EMP AS EMP ON DEPT.DEPTNO = EMP.DEPTNO WHERE EMP.SAL > 100",
        "SELECT 1 FROM DEPT AS DEPT0 INNER JOIN (SELECT * FROM EMP AS EMP0 WHERE EMP0.SAL > 100) AS t1 ON DEPT0.DEPTNO = t1.DEPTNO",
    ),
    Case(
        "testMergeFilter",
        "SELECT t.NAME FROM (SELECT * FROM DEPT AS DEPT WHERE DEPT.DEPTNO = 10) AS t WHERE t.DEPTNO = 10",
        "SELECT DEPT0.NAME FROM DEPT AS DEPT0 WHERE DEPT0.DEPTNO = 10",
    ),
    Case(
        "testMergeIntersect",
        "SELECT * FROM (SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO = 10 INTERSECT SELECT * FROM EMP AS EMP0 WHERE EMP0.DEPTNO = 20) AS t1 INTERSECT SELECT * FROM EMP AS EMP1 WHERE EMP1.DEPTNO = 30",
        "SELECT * FROM EMP AS EMP2 WHERE EMP2.DEPTNO = 10 INTERSECT SELECT * FROM EMP AS EMP3 WHERE EMP3.DEPTNO = 20 INTERSECT SELECT * FROM EMP AS EMP4 WHERE EMP4.DEPTNO = 30",
    ),
    Case(
        "testMergeJoinFilter",
        "SELECT * FROM (SELECT DEPT.DEPTNO, EMP.ENAME FROM EMP AS EMP INNER JOIN DEPT AS DEPT ON EMP.DEPTNO = DEPT.DEPTNO AND DEPT.DEPTNO = 10) AS t WHERE t.DEPTNO = 10",
        "SELECT t1.DEPTNO, EMP0.ENAME FROM EMP AS EMP0 INNER JOIN (SELECT * FROM DEPT AS DEPT0 WHERE DEPT0.DEPTNO = 10) AS t1 ON EMP0.DEPTNO = t1.DEPTNO",
    ),
    Case(
        "testMergeMinus",
        "SELECT * FROM (SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO = 10 EXCEPT SELECT * FROM EMP AS EMP0 WHERE EMP0.DEPTNO = 20) AS t1 EXCEPT SELECT * FROM EMP AS EMP1 WHERE EMP1.DEPTNO = 30",
        "SELECT * FROM EMP AS EMP2 WHERE EMP2.DEPTNO = 10 EXCEPT SELECT * FROM EMP AS EMP3 WHERE EMP3.DEPTNO = 20 EXCEPT SELECT * FROM EMP AS EMP4 WHERE EMP4.DEPTNO = 30",
    ),
    Case(
        "testMergeMinusRightDeep",
        "SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO = 10 EXCEPT SELECT * FROM (SELECT * FROM EMP AS EMP0 WHERE EMP0.DEPTNO = 20 EXCEPT SELECT * FROM EMP AS EMP1 WHERE EMP1.DEPTNO = 30) AS t2",
        "SELECT * FROM EMP AS EMP2 WHERE EMP2.DEPTNO = 10 EXCEPT SELECT * FROM (SELECT * FROM EMP AS EMP3 WHERE EMP3.DEPTNO = 20 EXCEPT SELECT * FROM EMP AS EMP4 WHERE EMP4.DEPTNO = 30) AS t7",
    ),
    Case(
        "testMergeSetOpMixed",
        "SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO = 10 UNION SELECT * FROM (SELECT * FROM EMP AS EMP0 WHERE EMP0.DEPTNO = 20 INTERSECT SELECT * FROM EMP AS EMP1 WHERE EMP1.DEPTNO = 30) AS t2",
        "SELECT * FROM EMP AS EMP2 WHERE EMP2.DEPTNO = 10 UNION SELECT * FROM (SELECT * FROM EMP AS EMP3 WHERE EMP3.DEPTNO = 20 INTERSECT SELECT * FROM EMP AS EMP4 WHERE EMP4.DEPTNO = 30) AS t7",
    ),
    Case(
        "testMergeUnionAll",
        "SELECT * FROM (SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO = 10 UNION ALL SELECT * FROM EMP AS EMP0 WHERE EMP0.DEPTNO = 20) AS t1 UNION ALL SELECT * FROM EMP AS EMP1 WHERE EMP1.DEPTNO = 30",
        "SELECT * FROM EMP AS EMP2 WHERE EMP2.DEPTNO = 10 UNION ALL SELECT * FROM EMP AS EMP3 WHERE EMP3.DEPTNO = 20 UNION ALL SELECT * FROM EMP AS EMP4 WHERE EMP4.DEPTNO = 30",
    ),
    Case(
        "testMergeUnionDistinct",
        "SELECT * FROM (SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO = 10 UNION SELECT * FROM EMP AS EMP0 WHERE EMP0.DEPTNO = 20) AS t1 UNION SELECT * FROM EMP AS EMP1 WHERE EMP1.DEPTNO = 30",
        "SELECT * FROM EMP AS EMP2 WHERE EMP2.DEPTNO = 10 UNION SELECT * FROM EMP AS EMP3 WHERE EMP3.DEPTNO = 20 UNION SELECT * FROM EMP AS EMP4 WHERE EMP4.DEPTNO = 30",
    ),
    Case(
        "testMergeUnionMixed",
        "SELECT * FROM (SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO = 10 UNION SELECT * FROM EMP AS EMP0 WHERE EMP0.DEPTNO = 20) AS t1 UNION ALL SELECT * FROM EMP AS EMP1 WHERE EMP1.DEPTNO = 30",
        "SELECT * FROM (SELECT * FROM EMP AS EMP2 WHERE EMP2.DEPTNO = 10 UNION SELECT * FROM EMP AS EMP3 WHERE EMP3.DEPTNO = 20) AS t6 UNION ALL SELECT * FROM EMP AS EMP4 WHERE EMP4.DEPTNO = 30",
    ),
    Case(
        "testMergeUnionMixed2",
        "SELECT * FROM (SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO = 10 UNION ALL SELECT * FROM EMP AS EMP0 WHERE EMP0.DEPTNO = 20) AS t1 UNION SELECT * FROM EMP AS EMP1 WHERE EMP1.DEPTNO = 30",
        "SELECT * FROM EMP AS EMP2 WHERE EMP2.DEPTNO = 10 UNION SELECT * FROM EMP AS EMP3 WHERE EMP3.DEPTNO = 20 UNION SELECT * FROM EMP AS EMP4 WHERE EMP4.DEPTNO = 30",
    ),
    Case(
        "testMinusMergeRule",
        "SELECT * FROM (SELECT t2.NAME, t2.DEPTNO FROM (SELECT DEPT.NAME, DEPT.DEPTNO, COUNT(*) FROM DEPT AS DEPT GROUP BY DEPT.NAME, DEPT.DEPTNO EXCEPT ALL SELECT DEPT0.NAME, DEPT0.DEPTNO, 1 FROM DEPT AS DEPT0) AS t2 EXCEPT ALL SELECT t7.NAME, t7.DEPTNO FROM (SELECT DEPT1.NAME, DEPT1.DEPTNO, 1 FROM DEPT AS DEPT1 EXCEPT ALL SELECT DEPT2.NAME, DEPT2.DEPTNO, COUNT(*) FROM DEPT AS DEPT2 GROUP BY DEPT2.NAME, DEPT2.DEPTNO) AS t7) AS t9 EXCEPT ALL SELECT DEPT3.NAME, DEPT3.DEPTNO FROM DEPT AS DEPT3",
        "SELECT DEPT4.NAME, DEPT4.DEPTNO FROM DEPT AS DEPT4 GROUP BY DEPT4.NAME, DEPT4.DEPTNO EXCEPT ALL SELECT DEPT5.NAME, DEPT5.DEPTNO FROM DEPT AS DEPT5 EXCEPT ALL SELECT * FROM (SELECT DEPT6.NAME, DEPT6.DEPTNO FROM DEPT AS DEPT6 EXCEPT ALL SELECT DEPT7.NAME, DEPT7.DEPTNO FROM DEPT AS DEPT7 GROUP BY DEPT7.NAME, DEPT7.DEPTNO) AS t22 EXCEPT ALL SELECT DEPT8.NAME, DEPT8.DEPTNO FROM DEPT AS DEPT8",
    ),
    Case(
        "testPullAggregateThroughUnion",
        "SELECT t3.DEPTNO, t3.JOB FROM (SELECT EMP.DEPTNO, EMP.JOB FROM EMP AS EMP GROUP BY EMP.DEPTNO, EMP.JOB UNION ALL SELECT EMP0.DEPTNO, EMP0.JOB FROM EMP AS EMP0 GROUP BY EMP0.DEPTNO, EMP0.JOB) AS t3 GROUP BY t3.DEPTNO, t3.JOB",
        "SELECT t7.DEPTNO, t7.JOB FROM (SELECT EMP1.DEPTNO, EMP1.JOB FROM EMP AS EMP1 UNION ALL SELECT EMP2.DEPTNO, EMP2.JOB FROM EMP AS EMP2) AS t7 GROUP BY t7.DEPTNO, t7.JOB",
    ),
    Case(
        "testPullConstantIntoFilter",
        "SELECT * FROM (SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO = 10) AS t WHERE t.DEPTNO + 5 > t.EMPNO",
        "SELECT * FROM (SELECT * FROM EMP AS EMP0 WHERE EMP0.DEPTNO = 10) AS t1 WHERE 15 > t1.EMPNO",
    ),
    Case(
        "testPullConstantIntoJoin",
        "SELECT * FROM (SELECT * FROM EMP AS EMP WHERE EMP.EMPNO = 10) AS t LEFT JOIN DEPT AS DEPT ON t.EMPNO = DEPT.DEPTNO",
        "SELECT * FROM (SELECT * FROM EMP AS EMP0 WHERE EMP0.EMPNO = 10) AS t0 LEFT JOIN (SELECT * FROM DEPT AS DEPT0 WHERE DEPT0.DEPTNO = 10) AS t1 ON TRUE",
    ),
    Case(
        "testPullConstantIntoJoin2",
        "SELECT t0.EMPNO, t0.ENAME, t0.JOB, t0.MGR, t0.HIREDATE, t0.SAL, t0.COMM, t0.DEPTNO, t0.SLACKER, t1.DEPTNO AS DEPTNO0, t1.NAME FROM (SELECT EMP.EMPNO, EMP.ENAME, EMP.JOB, EMP.MGR, EMP.HIREDATE, EMP.SAL, EMP.COMM, EMP.DEPTNO, EMP.SLACKER, EMP.DEPTNO + EMP.EMPNO AS X FROM EMP AS EMP WHERE EMP.EMPNO = 10) AS t0 INNER JOIN (SELECT DEPT.DEPTNO, DEPT.NAME, DEPT.DEPTNO + 5 AS Y FROM DEPT AS DEPT) AS t1 ON t0.EMPNO = t1.DEPTNO AND t0.X = t1.Y",
        "SELECT 10 AS EMPNO, t5.ENAME, t5.JOB, t5.MGR, t5.HIREDATE, t5.SAL, t5.COMM, t5.DEPTNO, t5.SLACKER, 10 AS DEPTNO0, t7.NAME FROM (SELECT 10 AS EMPNO, EMP0.ENAME, EMP0.JOB, EMP0.MGR, EMP0.HIREDATE, EMP0.SAL, EMP0.COMM, EMP0.DEPTNO, EMP0.SLACKER, EMP0.DEPTNO + 10 AS X FROM EMP AS EMP0 WHERE EMP0.EMPNO = 10) AS t5 INNER JOIN (SELECT 10 AS DEPTNO, DEPT0.NAME, 15 AS Y FROM DEPT AS DEPT0 WHERE DEPT0.DEPTNO = 10) AS t7 ON t5.X = 15",
    ),
    Case(
        "testPullConstantIntoProject",
        "SELECT EMP.DEPTNO, EMP.DEPTNO + 1, EMP.EMPNO + EMP.DEPTNO FROM EMP AS EMP WHERE EMP.DEPTNO = 10",
        "SELECT 10 AS DEPTNO, 11, EMP0.EMPNO + 10 FROM EMP AS EMP0 WHERE EMP0.DEPTNO = 10",
    ),
    Case(
        "testPullConstantThroughAggregatePermutedConstGroupBy",
        "SELECT EMP.DEPTNO, MAX(EMP.MGR) FROM EMP AS EMP GROUP BY 42 + 24, EMP.DEPTNO",
        "SELECT EMP0.DEPTNO, MAX(EMP0.MGR) FROM EMP AS EMP0 GROUP BY EMP0.DEPTNO",
    ),
    Case(
        "testPullConstantThroughUnion",
        "SELECT 2, EMP.DEPTNO, EMP.JOB FROM EMP AS EMP UNION ALL SELECT 2, EMP0.DEPTNO, EMP0.JOB FROM EMP AS EMP0",
        "SELECT 2, t6.DEPTNO, t6.JOB FROM (SELECT EMP1.DEPTNO, EMP1.JOB FROM EMP AS EMP1 UNION ALL SELECT EMP2.DEPTNO, EMP2.JOB FROM EMP AS EMP2) AS t6",
    ),
    Case(
        "testPullConstantThroughUnion2",
        "SELECT 2, EMP.DEPTNO, EMP.JOB FROM EMP AS EMP UNION ALL SELECT 1, EMP0.DEPTNO, EMP0.JOB FROM EMP AS EMP0",
        "SELECT 2, EMP1.DEPTNO, EMP1.JOB FROM EMP AS EMP1 UNION ALL SELECT 1, EMP2.DEPTNO, EMP2.JOB FROM EMP AS EMP2",
    ),
    Case(
        "testPullConstantThroughUnion3",
        "SELECT 2, 3 FROM EMP AS EMP UNION ALL SELECT 2, 3 FROM EMP AS EMP0",
        "SELECT 2, 3 FROM (SELECT 2 FROM EMP AS EMP1 UNION ALL SELECT 2 FROM EMP AS EMP2) AS t6",
    ),
    Case(
        "testPullFilterThroughAggregate",
        "SELECT t0.ENAME, t0.SAL, t0.DEPTNO FROM (SELECT EMP.ENAME, EMP.SAL, EMP.DEPTNO FROM EMP AS EMP) AS t0 WHERE t0.SAL > 5000 GROUP BY t0.ENAME, t0.SAL, t0.DEPTNO",
        "SELECT EMP0.ENAME, EMP0.SAL, EMP0.DEPTNO FROM EMP AS EMP0 GROUP BY EMP0.ENAME, EMP0.SAL, EMP0.DEPTNO HAVING EMP0.SAL > 5000",
    ),
    Case(
        "testPullFilterThroughAggregateGroupingSets",
        "SELECT t0.ENAME, t0.SAL, t0.DEPTNO FROM (SELECT EMP.ENAME, EMP.SAL, EMP.DEPTNO FROM EMP AS EMP) AS t0 WHERE t0.SAL > 5000 GROUP BY t0.ENAME, t0.SAL, t0.DEPTNO",
        "SELECT t4.ENAME, t4.SAL, t4.DEPTNO FROM (SELECT EMP0.ENAME, EMP0.SAL, EMP0.DEPTNO FROM EMP AS EMP0 GROUP BY EMP0.ENAME, EMP0.SAL, EMP0.DEPTNO HAVING EMP0.SAL > 5000) AS t4 GROUP BY t4.ENAME, t4.SAL, t4.DEPTNO",
    ),
    Case(
        "testPullNull",
        "SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO = 7 AND EMP.EMPNO = 10 AND EMP.MGR IS NULL AND EMP.EMPNO = 10",
        "SELECT 10 AS EMPNO, EMP0.ENAME, EMP0.JOB, NULL AS MGR, EMP0.HIREDATE, EMP0.SAL, EMP0.COMM, 7 AS DEPTNO, EMP0.SLACKER FROM EMP AS EMP0 WHERE EMP0.DEPTNO = 7 AND EMP0.MGR IS NULL AND EMP0.EMPNO = 10",
    ),
    Case(
        "testPushAggregateFunctionsThroughJoin",
        "SELECT EMP.JOB, MIN(EMP.SAL) AS MIN_SAL, MIN(EMP.DEPTNO) AS MIN_DEPTNO, SUM(EMP.SAL) + 1 AS SUM_SAL_PLUS, MAX(EMP.SAL) AS MAX_SAL, SUM(EMP.SAL) AS SUM_SAL_2, COUNT(*) AS COUNT_SAL, COUNT(EMP.MGR) AS COUNT_MGR FROM EMP AS EMP INNER JOIN DEPT AS DEPT ON EMP.JOB = DEPT.NAME GROUP BY EMP.JOB, DEPT.NAME",
        "SELECT t1.JOB, t1.MIN_SAL, t1.MIN_DEPTNO, CAST(t1.SUM_SAL_2 * t2.CNT AS INTEGER) + 1 AS SUM_SAL_PLUS, t1.MAX_SAL, CAST(t1.SUM_SAL_2 * t2.CNT AS INTEGER) AS SUM_SAL_2, t1.COUNT_SAL * t2.CNT AS COUNT_SAL, t1.COUNT_MGR * t2.CNT AS COUNT_MGR FROM (SELECT EMP0.JOB, MIN(EMP0.SAL) AS MIN_SAL, MIN(EMP0.DEPTNO) AS MIN_DEPTNO, SUM(EMP0.SAL) AS SUM_SAL_2, MAX(EMP0.SAL) AS MAX_SAL, COUNT(*) AS COUNT_SAL, COUNT(EMP0.MGR) AS COUNT_MGR FROM EMP AS EMP0 GROUP BY EMP0.JOB) AS t1 INNER JOIN (SELECT DEPT0.NAME, COUNT(*) AS CNT FROM DEPT AS DEPT0 GROUP BY DEPT0.NAME) AS t2 ON t1.JOB = t2.NAME",
    ),
    Case(
        "testPushAggregateSumThroughJoin",
        "SELECT t.JOB, SUM(t.SAL) FROM (SELECT * FROM EMP AS EMP WHERE EMP.EMPNO = 10) AS t INNER JOIN DEPT AS DEPT ON t.JOB = DEPT.NAME GROUP BY t.JOB, DEPT.NAME",
        "SELECT t3.JOB, CAST(SUM_EMP0_SAL * t4.CNT AS INTEGER) FROM (SELECT EMP0.JOB, SUM(EMP0.SAL) AS SUM_EMP0_SAL FROM EMP AS EMP0 WHERE EMP0.EMPNO = 10 GROUP BY EMP0.JOB) AS t3 INNER JOIN (SELECT DEPT0.NAME, COUNT(*) AS CNT FROM DEPT AS DEPT0 GROUP BY DEPT0.NAME) AS t4 ON t3.JOB = t4.NAME",
    ),
    Case(
        "testPushAggregateThroughJoin1",
        "SELECT t.JOB, DEPT.NAME FROM (SELECT * FROM EMP AS EMP WHERE EMP.EMPNO = 10) AS t INNER JOIN DEPT AS DEPT ON t.JOB = DEPT.NAME GROUP BY t.JOB, DEPT.NAME",
        "SELECT * FROM (SELECT EMP0.JOB FROM EMP AS EMP0 WHERE EMP0.EMPNO = 10 GROUP BY EMP0.JOB) AS t2 INNER JOIN (SELECT DEPT0.NAME FROM DEPT AS DEPT0 GROUP BY DEPT0.NAME) AS t3 ON t2.JOB = t3.NAME",
    ),
    Case(
        "testPushAggregateThroughJoin2",
        "SELECT t0.JOB, t1.NAME FROM (SELECT EMP.EMPNO, EMP.ENAME, EMP.JOB, EMP.MGR, EMP.HIREDATE, EMP.SAL, EMP.COMM, EMP.DEPTNO, EMP.SLACKER, EMP.DEPTNO + EMP.EMPNO AS X FROM EMP AS EMP WHERE EMP.EMPNO = 10) AS t0 INNER JOIN (SELECT DEPT.DEPTNO, DEPT.NAME, DEPT.DEPTNO + 5 AS Y FROM DEPT AS DEPT) AS t1 ON t0.JOB = t1.NAME AND t0.X = t1.Y GROUP BY t0.JOB, t1.NAME",
        "SELECT t5.JOB, t7.NAME FROM (SELECT EMP0.JOB, EMP0.DEPTNO + EMP0.EMPNO AS X FROM EMP AS EMP0 WHERE EMP0.EMPNO = 10 GROUP BY EMP0.JOB, EMP0.DEPTNO + EMP0.EMPNO) AS t5 INNER JOIN (SELECT DEPT0.NAME, DEPT0.DEPTNO + 5 AS Y FROM DEPT AS DEPT0 GROUP BY DEPT0.NAME, DEPT0.DEPTNO + 5) AS t7 ON t5.JOB = t7.NAME AND t5.X = t7.Y GROUP BY t5.JOB, t7.NAME",
    ),
    Case(
        "testPushAggregateThroughJoin3",
        "SELECT t.EMPNO, DEPT.DEPTNO AS DEPTNO0 FROM (SELECT * FROM EMP AS EMP WHERE EMP.EMPNO = 10) AS t INNER JOIN DEPT AS DEPT ON t.EMPNO < DEPT.DEPTNO GROUP BY t.EMPNO, DEPT.DEPTNO",
        "SELECT t1.EMPNO, DEPT0.DEPTNO AS DEPTNO0 FROM (SELECT * FROM EMP AS EMP0 WHERE EMP0.EMPNO = 10) AS t1 INNER JOIN DEPT AS DEPT0 ON t1.EMPNO < DEPT0.DEPTNO GROUP BY t1.EMPNO, DEPT0.DEPTNO",
    ),
    Case(
        "testPushAggregateThroughJoin4",
        "SELECT EMP.DEPTNO FROM EMP AS EMP INNER JOIN DEPT AS DEPT ON EMP.DEPTNO = DEPT.DEPTNO GROUP BY EMP.DEPTNO",
        "SELECT t0.DEPTNO FROM (SELECT EMP0.DEPTNO FROM EMP AS EMP0 GROUP BY EMP0.DEPTNO) AS t0 INNER JOIN DEPT AS DEPT0 ON t0.DEPTNO = DEPT0.DEPTNO",
    ),
    Case(
        "testPushAggregateThroughJoin5",
        "SELECT EMP.DEPTNO, DEPT.DEPTNO AS DEPTNO0 FROM EMP AS EMP INNER JOIN DEPT AS DEPT ON EMP.DEPTNO = DEPT.DEPTNO GROUP BY EMP.DEPTNO, DEPT.DEPTNO",
        "SELECT t0.DEPTNO, DEPT0.DEPTNO AS DEPTNO0 FROM (SELECT EMP0.DEPTNO FROM EMP AS EMP0 GROUP BY EMP0.DEPTNO) AS t0 INNER JOIN DEPT AS DEPT0 ON t0.DEPTNO = DEPT0.DEPTNO",
    ),
    Case(
        "testPushAggregateThroughJoinDistinct",
        "SELECT t.NAME, SUM(EMP.SAL) AS SUM_SAL, COUNT(*) AS C FROM EMP AS EMP INNER JOIN (SELECT DEPT.NAME FROM DEPT AS DEPT GROUP BY DEPT.NAME) AS t ON EMP.JOB = t.NAME GROUP BY t.NAME",
        "SELECT t2.NAME, t1.SUM_SAL, t1.C FROM (SELECT EMP0.JOB, SUM(EMP0.SAL) AS SUM_SAL, COUNT(*) AS C FROM EMP AS EMP0 GROUP BY EMP0.JOB) AS t1 INNER JOIN (SELECT DEPT0.NAME FROM DEPT AS DEPT0 GROUP BY DEPT0.NAME) AS t2 ON t1.JOB = t2.NAME",
    ),
    Case(
        "testPushAvgGroupingSetsThroughUnion",
        "SELECT t.DEPTNO, t.JOB, AVG(t.EMPNO) FROM (SELECT * FROM EMP AS EMP UNION ALL SELECT * FROM EMP AS EMP0) AS t GROUP BY t.DEPTNO, t.JOB",
        "SELECT t4.DEPTNO, t4.JOB, AVG(t4.EMPNO) FROM (SELECT EMP1.DEPTNO, EMP1.JOB, EMP1.EMPNO FROM EMP AS EMP1 UNION ALL SELECT EMP2.DEPTNO, EMP2.JOB, EMP2.EMPNO FROM EMP AS EMP2) AS t4 GROUP BY t4.DEPTNO, t4.JOB",
    ),
    Case(
        "testPushAvgThroughUnion",
        "SELECT t.ENAME, AVG(t.EMPNO) FROM (SELECT * FROM EMP AS EMP UNION ALL SELECT * FROM EMP AS EMP0) AS t GROUP BY t.ENAME",
        "SELECT t4.ENAME, AVG(t4.EMPNO) FROM (SELECT EMP1.ENAME, EMP1.EMPNO FROM EMP AS EMP1 UNION ALL SELECT EMP2.ENAME, EMP2.EMPNO FROM EMP AS EMP2) AS t4 GROUP BY t4.ENAME",
    ),
    Case(
        "testPushCountFilterThroughUnion",
        "SELECT t1.DEPTNO, COUNT(*) FROM (SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO = 10 UNION ALL SELECT * FROM EMP AS EMP0 WHERE EMP0.DEPTNO > 20) AS t1 GROUP BY t1.DEPTNO",
        "SELECT t10.DEPTNO, SUM(CNT) FROM (SELECT EMP1.DEPTNO, COUNT(*) AS CNT FROM EMP AS EMP1 WHERE EMP1.DEPTNO = 10 GROUP BY EMP1.DEPTNO UNION ALL SELECT EMP2.DEPTNO, COUNT(*) FROM EMP AS EMP2 WHERE EMP2.DEPTNO > 20 GROUP BY EMP2.DEPTNO) AS t10 GROUP BY t10.DEPTNO",
    ),
    Case(
        "testPushCountNullableGroupingSetsThroughUnion",
        "SELECT t.DEPTNO, t.JOB, COUNT(t.MGR) FROM (SELECT * FROM EMP AS EMP UNION ALL SELECT * FROM EMP AS EMP0) AS t GROUP BY t.DEPTNO, t.JOB",
        "SELECT t6.DEPTNO, t6.JOB, SUM(COUNT_EMP1_MGR) FROM (SELECT EMP1.DEPTNO, EMP1.JOB, COUNT(EMP1.MGR) AS COUNT_EMP1_MGR FROM EMP AS EMP1 GROUP BY EMP1.DEPTNO, EMP1.JOB UNION ALL SELECT EMP2.DEPTNO, EMP2.JOB, COUNT(EMP2.MGR) FROM EMP AS EMP2 GROUP BY EMP2.DEPTNO, EMP2.JOB) AS t6 GROUP BY t6.DEPTNO, t6.JOB",
    ),
    Case(
        "testPushCountNullableThroughUnion",
        "SELECT t.ENAME, COUNT(t.MGR) FROM (SELECT * FROM EMP AS EMP UNION ALL SELECT * FROM EMP AS EMP0) AS t GROUP BY t.ENAME",
        "SELECT t6.ENAME, SUM(CNT) FROM (SELECT EMP1.ENAME, COUNT(EMP1.MGR) AS CNT FROM EMP AS EMP1 GROUP BY EMP1.ENAME UNION ALL SELECT EMP2.ENAME, COUNT(EMP2.MGR) FROM EMP AS EMP2 GROUP BY EMP2.ENAME) AS t6 GROUP BY t6.ENAME",
    ),
    Case(
        "testPushCountStarGroupingSetsThroughUnion",
        "SELECT t.DEPTNO, t.JOB, COUNT(*) FROM (SELECT * FROM EMP AS EMP UNION ALL SELECT * FROM EMP AS EMP0) AS t GROUP BY t.DEPTNO, t.JOB",
        "SELECT t6.DEPTNO, t6.JOB, SUM(CNT) FROM (SELECT EMP1.DEPTNO, EMP1.JOB, COUNT(*) AS CNT FROM EMP AS EMP1 GROUP BY EMP1.DEPTNO, EMP1.JOB UNION ALL SELECT EMP2.DEPTNO, EMP2.JOB, COUNT(*) FROM EMP AS EMP2 GROUP BY EMP2.DEPTNO, EMP2.JOB) AS t6 GROUP BY t6.DEPTNO, t6.JOB",
    ),
    Case(
        "testPushCountStarThroughUnion",
        "SELECT t.ENAME, COUNT(*) FROM (SELECT * FROM EMP AS EMP UNION ALL SELECT * FROM EMP AS EMP0) AS t GROUP BY t.ENAME",
        "SELECT t6.ENAME, SUM(CNT) FROM (SELECT EMP1.ENAME, COUNT(*) AS CNT FROM EMP AS EMP1 GROUP BY EMP1.ENAME UNION ALL SELECT EMP2.ENAME, COUNT(*) FROM EMP AS EMP2 GROUP BY EMP2.ENAME) AS t6 GROUP BY t6.ENAME",
    ),
    Case(
        "testPushFilterPastAgg",
        "SELECT DEPT.NAME AS DNAME, COUNT(*) AS C FROM DEPT AS DEPT GROUP BY DEPT.NAME HAVING DEPT.NAME = 'Charlie'",
        "SELECT t.DNAME, COUNT(*) AS C FROM (SELECT DEPT0.NAME AS DNAME FROM DEPT AS DEPT0) AS t WHERE t.DNAME = 'Charlie' GROUP BY t.DNAME",
    ),
    Case(
        "testPushFilterPastAggThree",
        "SELECT EMP.DEPTNO FROM EMP AS EMP GROUP BY EMP.DEPTNO HAVING COUNT(*) > 1",
        "SELECT EMP0.DEPTNO FROM EMP AS EMP0 GROUP BY EMP0.DEPTNO HAVING COUNT(*) > 1",
    ),
    Case(
        "testPushFilterPastAggTwo",
        "SELECT DEPT.NAME AS C1 FROM DEPT AS DEPT WHERE DEPT.NAME > 'b' GROUP BY DEPT.NAME HAVING DEPT.NAME > 'c' AND (COUNT(*) > 30 OR DEPT.NAME < 'z')",
        "SELECT t5.C1 FROM (SELECT DEPT0.NAME AS C1 FROM DEPT AS DEPT0 WHERE DEPT0.NAME > 'b') AS t5 WHERE t5.C1 > 'c' GROUP BY t5.C1 HAVING COUNT(*) > 30 OR t5.C1 < 'z'",
    ),
    Case(
        "testPushFilterPastAggWithGroupingSets1",
        "SELECT DEPT.DEPTNO, DEPT.NAME, COUNT(*) AS C FROM DEPT AS DEPT GROUP BY DEPT.DEPTNO, DEPT.NAME HAVING DEPT.NAME = 'Charlie'",
        "SELECT DEPT0.DEPTNO, DEPT0.NAME, COUNT(*) AS C FROM DEPT AS DEPT0 GROUP BY DEPT0.DEPTNO, DEPT0.NAME HAVING DEPT0.NAME = 'Charlie'",
    ),
    Case(
        "testPushFilterPastAggWithGroupingSets2",
        "SELECT DEPT.NAME AS DNAME, DEPT.DEPTNO AS DDEPTNO, COUNT(*) AS C FROM DEPT AS DEPT GROUP BY DEPT.NAME, DEPT.DEPTNO HAVING DEPT.NAME = 'Charlie'",
        "SELECT t.DNAME, t.DDEPTNO, COUNT(*) AS C FROM (SELECT DEPT0.NAME AS DNAME, DEPT0.DEPTNO AS DDEPTNO FROM DEPT AS DEPT0) AS t WHERE t.DNAME = 'Charlie' GROUP BY t.DNAME, t.DDEPTNO",
    ),
    Case(
        "testPushFilterThroughSemiJoin",
        "SELECT * FROM DEPT AS DEPT INNER JOIN (SELECT EMP.DEPTNO FROM EMP AS EMP) AS t ON DEPT.DEPTNO = t.DEPTNO WHERE DEPT.DEPTNO <= 10",
        "SELECT * FROM (SELECT * FROM DEPT AS DEPT0 WHERE DEPT0.DEPTNO <= 10) AS t1 INNER JOIN (SELECT EMP0.DEPTNO FROM EMP AS EMP0) AS t2 ON t1.DEPTNO = t2.DEPTNO",
    ),
    Case(
        "testPushFilterWithRank",
        "SELECT * FROM (SELECT EMP.ENAME, RANK() OVER (PARTITION BY EMP.DEPTNO ORDER BY EMP.SAL RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS R FROM EMP AS EMP) AS t WHERE t.R < 2",
        "SELECT * FROM (SELECT EMP0.ENAME, RANK() OVER (PARTITION BY EMP0.DEPTNO ORDER BY EMP0.SAL RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS R FROM EMP AS EMP0) AS t1 WHERE t1.R < 2",
    ),
    Case(
        "testPushFilterWithRankExpr",
        "SELECT * FROM (SELECT EMP.ENAME, (RANK() OVER (PARTITION BY EMP.DEPTNO ORDER BY EMP.SAL RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) + 1 AS R FROM EMP AS EMP) AS t WHERE t.R < 2",
        "SELECT * FROM (SELECT EMP0.ENAME, (RANK() OVER (PARTITION BY EMP0.DEPTNO ORDER BY EMP0.SAL RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) + 1 AS R FROM EMP AS EMP0) AS t1 WHERE t1.R < 2",
    ),
    Case(
        "testPushJoinCondDownToProject",
        "SELECT DEPT.DEPTNO, EMP.DEPTNO AS DEPTNO0 FROM DEPT AS DEPT, EMP AS EMP WHERE DEPT.DEPTNO + 10 = EMP.DEPTNO * 2",
        "SELECT t1.DEPTNO, t2.DEPTNO AS DEPTNO0 FROM (SELECT DEPT0.DEPTNO, DEPT0.NAME, DEPT0.DEPTNO + 10 AS X FROM DEPT AS DEPT0) AS t1 INNER JOIN (SELECT EMP0.EMPNO, EMP0.ENAME, EMP0.JOB, EMP0.MGR, EMP0.HIREDATE, EMP0.SAL, EMP0.COMM, EMP0.DEPTNO, EMP0.SLACKER, EMP0.DEPTNO * 2 AS Y FROM EMP AS EMP0) AS t2 ON t1.X = t2.Y",
    ),
    Case(
        "testPushMaxNullableGroupingSetsThroughUnion",
        "SELECT t.DEPTNO, t.JOB, MAX(t.MGR) FROM (SELECT * FROM EMP AS EMP UNION ALL SELECT * FROM EMP AS EMP0) AS t GROUP BY t.DEPTNO, t.JOB",
        "SELECT t6.DEPTNO, t6.JOB, MAX(MAX_EMP1_MGR) FROM (SELECT EMP1.DEPTNO, EMP1.JOB, MAX(EMP1.MGR) AS MAX_EMP1_MGR FROM EMP AS EMP1 GROUP BY EMP1.DEPTNO, EMP1.JOB UNION ALL SELECT EMP2.DEPTNO, EMP2.JOB, MAX(EMP2.MGR) FROM EMP AS EMP2 GROUP BY EMP2.DEPTNO, EMP2.JOB) AS t6 GROUP BY t6.DEPTNO, t6.JOB",
    ),
    Case(
        "testPushMaxNullableThroughUnion",
        "SELECT t.ENAME, MAX(t.MGR) FROM (SELECT * FROM EMP AS EMP UNION ALL SELECT * FROM EMP AS EMP0) AS t GROUP BY t.ENAME",
        "SELECT t6.ENAME, MAX(MAX_EMP1_MGR) FROM (SELECT EMP1.ENAME, MAX(EMP1.MGR) AS MAX_EMP1_MGR FROM EMP AS EMP1 GROUP BY EMP1.ENAME UNION ALL SELECT EMP2.ENAME, MAX(EMP2.MGR) FROM EMP AS EMP2 GROUP BY EMP2.ENAME) AS t6 GROUP BY t6.ENAME",
    ),
    Case(
        "testPushMinGroupingSetsThroughUnion",
        "SELECT t.DEPTNO, t.JOB, MIN(t.EMPNO) FROM (SELECT * FROM EMP AS EMP UNION ALL SELECT * FROM EMP AS EMP0) AS t GROUP BY t.DEPTNO, t.JOB",
        "SELECT t6.DEPTNO, t6.JOB, MIN(MIN_EMP1_EMPNO) FROM (SELECT EMP1.DEPTNO, EMP1.JOB, MIN(EMP1.EMPNO) AS MIN_EMP1_EMPNO FROM EMP AS EMP1 GROUP BY EMP1.DEPTNO, EMP1.JOB UNION ALL SELECT EMP2.DEPTNO, EMP2.JOB, MIN(EMP2.EMPNO) FROM EMP AS EMP2 GROUP BY EMP2.DEPTNO, EMP2.JOB) AS t6 GROUP BY t6.DEPTNO, t6.JOB",
    ),
    Case(
        "testPushMinThroughUnion",
        "SELECT t.ENAME, MIN(t.EMPNO) FROM (SELECT * FROM EMP AS EMP UNION ALL SELECT * FROM EMP AS EMP0) AS t GROUP BY t.ENAME",
        "SELECT t6.ENAME, MIN(MIN_EMP1_EMPNO) FROM (SELECT EMP1.ENAME, MIN(EMP1.EMPNO) AS MIN_EMP1_EMPNO FROM EMP AS EMP1 GROUP BY EMP1.ENAME UNION ALL SELECT EMP2.ENAME, MIN(EMP2.EMPNO) FROM EMP AS EMP2 GROUP BY EMP2.ENAME) AS t6 GROUP BY t6.ENAME",
    ),
    Case(
        "testPushProjectPastFilter",
        "SELECT EMP.EMPNO + EMP.DEPTNO FROM EMP AS EMP WHERE EMP.SAL = 10 * EMP.COMM AND UPPER(EMP.ENAME) = 'FOO'",
        "SELECT t1.EMPNO + t1.DEPTNO FROM (SELECT EMP0.EMPNO, EMP0.ENAME, EMP0.SAL, EMP0.COMM, EMP0.DEPTNO FROM EMP AS EMP0) AS t1 WHERE t1.SAL = 10 * t1.COMM AND UPPER(t1.ENAME) = 'FOO'",
    ),
    Case(
        "testPushProjectPastFilter2",
        "SELECT COUNT(*) FROM EMP AS EMP WHERE CASE WHEN EMP.MGR < 10 THEN TRUE ELSE FALSE END",
        "SELECT COUNT(*) FROM (SELECT EMP0.MGR FROM EMP AS EMP0) AS t2 WHERE t2.MGR < 10",
    ),
    Case(
        "testPushProjectPastFullJoin",
        "SELECT COUNT(*), CASE WHEN EMP.SAL < 11 THEN 11 ELSE -1 * EMP.SAL END FROM EMP AS EMP FULL JOIN BONUS AS BONUS ON EMP.ENAME = BONUS.ENAME GROUP BY CASE WHEN EMP.SAL < 11 THEN 11 ELSE -1 * EMP.SAL END",
        "SELECT COUNT(*), CASE WHEN t2.X THEN 11 ELSE t2.Y END FROM (SELECT EMP0.ENAME, EMP0.SAL < 11 AS X, -1 * EMP0.SAL AS Y FROM EMP AS EMP0) AS t2 FULL JOIN (SELECT BONUS0.ENAME FROM BONUS AS BONUS0) AS t3 ON t2.ENAME = t3.ENAME GROUP BY CASE WHEN t2.X THEN 11 ELSE t2.Y END",
    ),
    Case(
        "testPushProjectPastFullJoinStrong",
        "SELECT COUNT(*), CASE WHEN EMP.SAL < 11 THEN -1 * EMP.SAL ELSE EMP.SAL END FROM EMP AS EMP FULL JOIN BONUS AS BONUS ON EMP.ENAME = BONUS.ENAME GROUP BY CASE WHEN EMP.SAL < 11 THEN -1 * EMP.SAL ELSE EMP.SAL END",
        "SELECT COUNT(*), t2.CASE FROM (SELECT EMP0.ENAME, CASE WHEN EMP0.SAL < 11 THEN -1 * EMP0.SAL ELSE EMP0.SAL END AS CASE FROM EMP AS EMP0) AS t2 FULL JOIN (SELECT BONUS0.ENAME FROM BONUS AS BONUS0) AS t3 ON t2.ENAME = t3.ENAME GROUP BY t2.CASE",
    ),
    Case(
        "testPushProjectPastInnerJoin",
        "SELECT COUNT(*), CASE WHEN EMP.SAL < 11 THEN 11 ELSE -1 * EMP.SAL END FROM EMP AS EMP INNER JOIN BONUS AS BONUS ON EMP.ENAME = BONUS.ENAME GROUP BY CASE WHEN EMP.SAL < 11 THEN 11 ELSE -1 * EMP.SAL END",
        "SELECT COUNT(*), t2.CASE FROM (SELECT EMP0.ENAME, CASE WHEN EMP0.SAL < 11 THEN 11 ELSE -1 * EMP0.SAL END AS CASE FROM EMP AS EMP0) AS t2 INNER JOIN (SELECT BONUS0.ENAME FROM BONUS AS BONUS0) AS t3 ON t2.ENAME = t3.ENAME GROUP BY t2.CASE",
    ),
    Case(
        "testPushProjectPastInnerJoinStrong",
        "SELECT COUNT(*), CASE WHEN EMP.SAL < 11 THEN -1 * EMP.SAL ELSE EMP.SAL END FROM EMP AS EMP INNER JOIN BONUS AS BONUS ON EMP.ENAME = BONUS.ENAME GROUP BY CASE WHEN EMP.SAL < 11 THEN -1 * EMP.SAL ELSE EMP.SAL END",
        "SELECT COUNT(*), t2.CASE FROM (SELECT EMP0.ENAME, CASE WHEN EMP0.SAL < 11 THEN -1 * EMP0.SAL ELSE EMP0.SAL END AS CASE FROM EMP AS EMP0) AS t2 INNER JOIN (SELECT BONUS0.ENAME FROM BONUS AS BONUS0) AS t3 ON t2.ENAME = t3.ENAME GROUP BY t2.CASE",
    ),
    Case(
        "testPushProjectPastLeftJoin",
        "SELECT COUNT(*), CASE WHEN EMP.SAL < 11 THEN 11 ELSE -1 * EMP.SAL END FROM EMP AS EMP LEFT JOIN BONUS AS BONUS ON EMP.ENAME = BONUS.ENAME GROUP BY CASE WHEN EMP.SAL < 11 THEN 11 ELSE -1 * EMP.SAL END",
        "SELECT COUNT(*), t2.CASE FROM (SELECT EMP0.ENAME, CASE WHEN EMP0.SAL < 11 THEN 11 ELSE -1 * EMP0.SAL END AS CASE FROM EMP AS EMP0) AS t2 LEFT JOIN (SELECT BONUS0.ENAME FROM BONUS AS BONUS0) AS t3 ON t2.ENAME = t3.ENAME GROUP BY t2.CASE",
    ),
    Case(
        "testPushProjectPastLeftJoinSwap",
        "SELECT COUNT(*), CASE WHEN EMP.SAL < 11 THEN 11 ELSE -1 * EMP.SAL END FROM BONUS AS BONUS LEFT JOIN EMP AS EMP ON BONUS.ENAME = EMP.ENAME GROUP BY CASE WHEN EMP.SAL < 11 THEN 11 ELSE -1 * EMP.SAL END",
        "SELECT COUNT(*), CASE WHEN t3.X THEN 11 ELSE t3.Y END FROM (SELECT BONUS0.ENAME FROM BONUS AS BONUS0) AS t2 LEFT JOIN (SELECT EMP0.ENAME, EMP0.SAL < 11 AS X, -1 * EMP0.SAL AS Y FROM EMP AS EMP0) AS t3 ON t2.ENAME = t3.ENAME GROUP BY CASE WHEN t3.X THEN 11 ELSE t3.Y END",
    ),
    Case(
        "testPushProjectPastLeftJoinSwapStrong",
        "SELECT COUNT(*), CASE WHEN EMP.SAL < 11 THEN -1 * EMP.SAL ELSE EMP.SAL END FROM BONUS AS BONUS LEFT JOIN EMP AS EMP ON BONUS.ENAME = EMP.ENAME GROUP BY CASE WHEN EMP.SAL < 11 THEN -1 * EMP.SAL ELSE EMP.SAL END",
        "SELECT COUNT(*), t3.CASE FROM (SELECT BONUS0.ENAME FROM BONUS AS BONUS0) AS t2 LEFT JOIN (SELECT EMP0.ENAME, CASE WHEN EMP0.SAL < 11 THEN -1 * EMP0.SAL ELSE EMP0.SAL END AS CASE FROM EMP AS EMP0) AS t3 ON t2.ENAME = t3.ENAME GROUP BY t3.CASE",
    ),
    Case(
        "testPushProjectPastRightJoin",
        "SELECT COUNT(*), CASE WHEN EMP.SAL < 11 THEN 11 ELSE -1 * EMP.SAL END FROM EMP AS EMP RIGHT JOIN BONUS AS BONUS ON EMP.ENAME = BONUS.ENAME GROUP BY CASE WHEN EMP.SAL < 11 THEN 11 ELSE -1 * EMP.SAL END",
        "SELECT COUNT(*), CASE WHEN t2.X THEN 11 ELSE t2.Y END FROM (SELECT EMP0.ENAME, EMP0.SAL < 11 AS X, -1 * EMP0.SAL AS Y FROM EMP AS EMP0) AS t2 RIGHT JOIN (SELECT BONUS0.ENAME FROM BONUS AS BONUS0) AS t3 ON t2.ENAME = t3.ENAME GROUP BY CASE WHEN t2.X THEN 11 ELSE t2.Y END",
    ),
    Case(
        "testPushProjectPastRightJoinStrong",
        "SELECT COUNT(*), CASE WHEN EMP.SAL < 11 THEN -1 * EMP.SAL ELSE EMP.SAL END FROM EMP AS EMP RIGHT JOIN BONUS AS BONUS ON EMP.ENAME = BONUS.ENAME GROUP BY CASE WHEN EMP.SAL < 11 THEN -1 * EMP.SAL ELSE EMP.SAL END",
        "SELECT COUNT(*), t2.CASE FROM (SELECT EMP0.ENAME, CASE WHEN EMP0.SAL < 11 THEN -1 * EMP0.SAL ELSE EMP0.SAL END AS CASE FROM EMP AS EMP0) AS t2 RIGHT JOIN (SELECT BONUS0.ENAME FROM BONUS AS BONUS0) AS t3 ON t2.ENAME = t3.ENAME GROUP BY t2.CASE",
    ),
    Case(
        "testPushProjectPastRightJoinSwap",
        "SELECT COUNT(*), CASE WHEN EMP.SAL < 11 THEN 11 ELSE -1 * EMP.SAL END FROM BONUS AS BONUS RIGHT JOIN EMP AS EMP ON BONUS.ENAME = EMP.ENAME GROUP BY CASE WHEN EMP.SAL < 11 THEN 11 ELSE -1 * EMP.SAL END",
        "SELECT COUNT(*), t3.CASE FROM (SELECT BONUS0.ENAME FROM BONUS AS BONUS0) AS t2 RIGHT JOIN (SELECT EMP0.ENAME, CASE WHEN EMP0.SAL < 11 THEN 11 ELSE -1 * EMP0.SAL END AS CASE FROM EMP AS EMP0) AS t3 ON t2.ENAME = t3.ENAME GROUP BY t3.CASE",
    ),
    Case(
        "testPushProjectPastRightJoinSwapStrong",
        "SELECT COUNT(*), CASE WHEN EMP.SAL < 11 THEN -1 * EMP.SAL ELSE EMP.SAL END FROM BONUS AS BONUS RIGHT JOIN EMP AS EMP ON BONUS.ENAME = EMP.ENAME GROUP BY CASE WHEN EMP.SAL < 11 THEN -1 * EMP.SAL ELSE EMP.SAL END",
        "SELECT COUNT(*), t3.CASE FROM (SELECT BONUS0.ENAME FROM BONUS AS BONUS0) AS t2 RIGHT JOIN (SELECT EMP0.ENAME, CASE WHEN EMP0.SAL < 11 THEN -1 * EMP0.SAL ELSE EMP0.SAL END AS CASE FROM EMP AS EMP0) AS t3 ON t2.ENAME = t3.ENAME GROUP BY t3.CASE",
    ),
    Case(
        "testPushProjectPastSetOp",
        "SELECT t.SAL FROM (SELECT * FROM EMP AS EMP UNION ALL SELECT * FROM EMP AS EMP0) AS t",
        "SELECT EMP1.SAL FROM EMP AS EMP1 UNION ALL SELECT EMP2.SAL FROM EMP AS EMP2",
    ),
    Case(
        "testPushSemiJoinPastJoinRuleLeft",
        "SELECT EMP.ENAME FROM EMP AS EMP, DEPT AS DEPT, EMP AS EMP0 WHERE EMP.DEPTNO = DEPT.DEPTNO AND EMP.EMPNO = EMP0.EMPNO",
        "SELECT EMP1.ENAME FROM EMP AS EMP1 INNER JOIN DEPT AS DEPT0 ON EMP1.DEPTNO = DEPT0.DEPTNO INNER JOIN EMP AS EMP2 ON EMP1.EMPNO = EMP2.EMPNO INNER JOIN DEPT AS DEPT1 ON EMP1.DEPTNO = DEPT1.DEPTNO INNER JOIN EMP AS EMP3 ON EMP1.EMPNO = EMP3.EMPNO",
    ),
    Case(
        "testPushSemiJoinPastJoinRuleRight",
        "SELECT EMP.ENAME FROM EMP AS EMP, DEPT AS DEPT, EMP AS EMP0 WHERE EMP.DEPTNO = DEPT.DEPTNO AND DEPT.DEPTNO = EMP0.DEPTNO",
        "SELECT EMP1.ENAME FROM EMP AS EMP1 INNER JOIN DEPT AS DEPT0 ON EMP1.DEPTNO = DEPT0.DEPTNO INNER JOIN (DEPT AS DEPT1 INNER JOIN EMP AS EMP2 ON DEPT1.DEPTNO = EMP2.DEPTNO) ON EMP1.DEPTNO = DEPT1.DEPTNO INNER JOIN EMP AS EMP3 ON DEPT0.DEPTNO = EMP3.DEPTNO",
    ),
    Case(
        "testPushSumCountStarGroupingSetsThroughUnion",
        "SELECT t.DEPTNO, t.JOB, SUM(t.EMPNO), COUNT(*), MIN(t.DEPTNO), MAX(t.EMPNO) FROM (SELECT * FROM EMP AS EMP UNION ALL SELECT * FROM EMP AS EMP0) AS t GROUP BY t.DEPTNO, t.JOB",
        "SELECT t6.DEPTNO, t6.JOB, SUM(SUM_EMP1_EMPNO), SUM(CNT), MIN(MIN_EMP1_DEPTNO), MAX(MAX_EMP1_EMPNO) FROM (SELECT EMP1.DEPTNO, EMP1.JOB, SUM(EMP1.EMPNO) AS SUM_EMP1_EMPNO, COUNT(*) AS CNT, MIN(EMP1.DEPTNO) AS MIN_EMP1_DEPTNO, MAX(EMP1.EMPNO) AS MAX_EMP1_EMPNO FROM EMP AS EMP1 GROUP BY EMP1.DEPTNO, EMP1.JOB UNION ALL SELECT EMP2.DEPTNO, EMP2.JOB, SUM(EMP2.EMPNO), COUNT(*), MIN(EMP2.DEPTNO), MAX(EMP2.EMPNO) FROM EMP AS EMP2 GROUP BY EMP2.DEPTNO, EMP2.JOB) AS t6 GROUP BY t6.DEPTNO, t6.JOB",
    ),
    Case(
        "testPushSumCountStarThroughUnion",
        "SELECT t.ENAME, SUM(t.EMPNO), COUNT(*), MIN(t.DEPTNO), MAX(t.EMPNO) FROM (SELECT * FROM EMP AS EMP UNION ALL SELECT * FROM EMP AS EMP0) AS t GROUP BY t.ENAME",
        "SELECT t6.ENAME, SUM(SUM_EMP1_EMPNO), SUM(COUNT), MIN(MIN_EMP1_DEPTNO), MAX(MAX_EMP1_EMPNO) FROM (SELECT EMP1.ENAME, SUM(EMP1.EMPNO) AS SUM_EMP1_EMPNO, COUNT(*) AS COUNT, MIN(EMP1.DEPTNO) AS MIN_EMP1_DEPTNO, MAX(EMP1.EMPNO) AS MAX_EMP1_EMPNO FROM EMP AS EMP1 GROUP BY EMP1.ENAME UNION ALL SELECT EMP2.ENAME, SUM(EMP2.EMPNO), COUNT(*), MIN(EMP2.DEPTNO), MAX(EMP2.EMPNO) FROM EMP AS EMP2 GROUP BY EMP2.ENAME) AS t6 GROUP BY t6.ENAME",
    ),
    Case(
        "testPushSumNullableGroupingSetsThroughUnion",
        "SELECT t.DEPTNO, t.JOB, SUM(t.MGR) FROM (SELECT * FROM EMP AS EMP UNION ALL SELECT * FROM EMP AS EMP0) AS t GROUP BY t.DEPTNO, t.JOB",
        "SELECT t6.DEPTNO, t6.JOB, SUM(SUM_EMP1_MGR) FROM (SELECT EMP1.DEPTNO, EMP1.JOB, SUM(EMP1.MGR) AS SUM_EMP1_MGR FROM EMP AS EMP1 GROUP BY EMP1.DEPTNO, EMP1.JOB UNION ALL SELECT EMP2.DEPTNO, EMP2.JOB, SUM(EMP2.MGR) FROM EMP AS EMP2 GROUP BY EMP2.DEPTNO, EMP2.JOB) AS t6 GROUP BY t6.DEPTNO, t6.JOB",
    ),
    Case(
        "testPushSumNullableNOGBYThroughUnion",
        "SELECT SUM(t.MGR) FROM (SELECT * FROM EMP AS EMP UNION ALL SELECT * FROM EMP AS EMP0) AS t",
        "SELECT SUM(SUM_EMP1_MGR) FROM (SELECT SUM(EMP1.MGR) AS SUM_EMP1_MGR FROM EMP AS EMP1 UNION ALL SELECT SUM(EMP2.MGR) FROM EMP AS EMP2) AS t6",
    ),
    Case(
        "testPushSumNullableThroughUnion",
        "SELECT t.ENAME, SUM(t.MGR) FROM (SELECT * FROM EMP AS EMP UNION ALL SELECT * FROM EMP AS EMP0) AS t GROUP BY t.ENAME",
        "SELECT t6.ENAME, SUM(SUM_EMP1_MGR) FROM (SELECT EMP1.ENAME, SUM(EMP1.MGR) AS SUM_EMP1_MGR FROM EMP AS EMP1 GROUP BY EMP1.ENAME UNION ALL SELECT EMP2.ENAME, SUM(EMP2.MGR) FROM EMP AS EMP2 GROUP BY EMP2.ENAME) AS t6 GROUP BY t6.ENAME",
    ),
    Case(
        "testReduceAverage",
        "SELECT DEPT.NAME, MAX(DEPT.NAME), AVG(DEPT.DEPTNO), MIN(DEPT.NAME) FROM DEPT AS DEPT GROUP BY DEPT.NAME",
        "SELECT DEPT0.NAME, MAX(DEPT0.NAME), CAST(SUM(DEPT0.DEPTNO) / COUNT(*) AS INTEGER), MIN(DEPT0.NAME) FROM DEPT AS DEPT0 GROUP BY DEPT0.NAME",
    ),
    Case(
        "testReduceCastAndConsts",
        "SELECT * FROM EMP AS EMP WHERE CAST(EMP.EMPNO + 10 / 2 AS INTEGER) = 13",
        "SELECT * FROM EMP AS EMP0 WHERE EMP0.EMPNO + 5 = 13",
    ),
    Case(
        "testReduceCasts",
        "SELECT CAST(t1.NAME AS VARCHAR(128)), CAST(t1.EMPNO AS INTEGER) FROM (SELECT t.DEPTNO, t.NAME, t0.EMPNO, t0.ENAME, t0.JOB, t0.MGR, t0.HIREDATE, t0.SAL, t0.COMM, t0.DEPTNO AS DEPTNO1, t0.SLACKER FROM (SELECT DEPT.DEPTNO, DEPT.NAME, CAST(DEPT.DEPTNO AS INTEGER) AS DEPTNO0 FROM DEPT AS DEPT) AS t INNER JOIN (SELECT EMP.EMPNO, EMP.ENAME, EMP.JOB, EMP.MGR, EMP.HIREDATE, EMP.SAL, EMP.COMM, EMP.DEPTNO, EMP.SLACKER, CAST(EMP.DEPTNO AS INTEGER) AS DEPTNO0 FROM EMP AS EMP) AS t0 ON t.DEPTNO0 = t0.DEPTNO0) AS t1 WHERE CAST(t1.JOB AS VARCHAR(1)) = 'Manager'",
        "SELECT CAST(t6.NAME AS VARCHAR(128)), t6.EMPNO FROM (SELECT t4.DEPTNO, t4.NAME, t5.EMPNO, t5.ENAME, t5.JOB, t5.MGR, t5.HIREDATE, t5.SAL, t5.COMM, t5.DEPTNO AS DEPTNO1, t5.SLACKER FROM (SELECT DEPT0.DEPTNO, DEPT0.NAME, DEPT0.DEPTNO AS DEPTNO0 FROM DEPT AS DEPT0) AS t4 INNER JOIN (SELECT EMP0.EMPNO, EMP0.ENAME, EMP0.JOB, EMP0.MGR, EMP0.HIREDATE, EMP0.SAL, EMP0.COMM, EMP0.DEPTNO, EMP0.SLACKER, EMP0.DEPTNO AS DEPTNO0 FROM EMP AS EMP0) AS t5 ON t4.DEPTNO0 = t5.DEPTNO0) AS t6 WHERE CAST(t6.JOB AS VARCHAR(1)) = 'Manager'",
    ),
    Case(
        "testReduceCompositeInSubQuery",
        "SELECT * FROM EMP AS EMP WHERE (EMP.EMPNO, EMP.DEPTNO) IN (SELECT EMP0.EMPNO, EMP0.DEPTNO FROM EMP AS EMP0 GROUP BY EMP0.EMPNO, EMP0.DEPTNO) OR EMP.DEPTNO < 40 + 60",
        "SELECT * FROM EMP AS EMP1 WHERE (EMP1.EMPNO, EMP1.DEPTNO) IN (SELECT EMP2.EMPNO, EMP2.DEPTNO FROM EMP AS EMP2 GROUP BY EMP2.EMPNO, EMP2.DEPTNO) OR EMP1.DEPTNO < 100",
    ),
    Case(
        "testReduceConstants",
        "SELECT 1 + 2, t0.DEPTNO + (3 + 4), 5 + 6 + t0.DEPTNO, NULL, CASE WHEN 2 IS NOT NULL THEN 2 ELSE NULL END, ROW(7 + 8) FROM (SELECT DEPT.DEPTNO, DEPT.NAME, t.EMPNO, t.ENAME, t.JOB, t.MGR, t.HIREDATE, t.SAL, t.COMM, t.DEPTNO AS DEPTNO0, t.SLACKER FROM DEPT AS DEPT INNER JOIN (SELECT EMP.EMPNO, EMP.ENAME, EMP.JOB, EMP.MGR, EMP.HIREDATE, EMP.SAL, EMP.COMM, EMP.DEPTNO, EMP.SLACKER, EMP.DEPTNO + (5 - 5) AS X FROM EMP AS EMP) AS t ON DEPT.DEPTNO = t.X) AS t0 WHERE t0.DEPTNO = 7 + 8 AND t0.DEPTNO = 8 + 7 AND t0.DEPTNO = CASE WHEN 2 IS NOT NULL THEN 2 ELSE NULL END",
        "SELECT 3, 22, 26, NULL, CAST(2 AS INTEGER), ROW(15) FROM (VALUES (0)) AS t",
    ),
    Case(
        "testReduceConstants2",
        "SELECT CAST(CASE WHEN NULL IS NULL THEN 2 IS NULL WHEN 2 IS NULL THEN NULL IS NULL ELSE NULL = 2 END AS BOOLEAN) FROM (VALUES  (0)) AS t",
        "SELECT FALSE FROM (VALUES  (0)) AS t2",
    ),
    Case(
        "testReduceConstantsCalc",
        "SELECT * FROM (SELECT UPPER(SUBSTRING(t6.X FROM 1 FOR 2) || SUBSTRING(t6.X FROM 3)) AS U, SUBSTRING(t6.X FROM 1 FOR 1) AS S FROM (SELECT * FROM (SELECT 'table' AS X FROM (VALUES  (TRUE)) AS t UNION SELECT 'view' FROM (VALUES  (TRUE)) AS t1) AS t3 UNION SELECT 'foreign table' FROM (VALUES  (TRUE)) AS t4) AS t6) AS t7 WHERE t7.U = 'TABLE'",
        "SELECT 'TABLE        ' AS U, 't' AS S FROM (VALUES  (TRUE)) AS t9",
    ),
    Case(
        "testReduceConstantsCaseEquals",
        "SELECT COUNT(*) FROM EMP AS EMP WHERE CASE WHEN EMP.DEPTNO = 20 THEN 2 WHEN EMP.DEPTNO = 10 THEN 1 ELSE 3 END = 1",
        "SELECT COUNT(*) FROM EMP AS EMP0 WHERE EMP0.DEPTNO = 10",
    ),
    Case(
        "testReduceConstantsCaseEquals2",
        "SELECT COUNT(*) FROM EMP AS EMP WHERE CASE WHEN EMP.DEPTNO = 20 THEN 2 WHEN EMP.DEPTNO = 10 THEN 1 ELSE NULL END = 1",
        "SELECT COUNT(*) FROM EMP AS EMP0 WHERE EMP0.DEPTNO = 10",
    ),
    Case(
        "testReduceConstantsCaseEquals3",
        "SELECT COUNT(*) FROM EMP AS EMP WHERE CASE WHEN EMP.DEPTNO = 30 THEN 1 WHEN EMP.DEPTNO = 20 THEN 2 WHEN EMP.DEPTNO = 10 THEN 1 WHEN EMP.DEPTNO = 30 THEN 111 ELSE 0 END = 1",
        "SELECT COUNT(*) FROM EMP AS EMP0 WHERE EMP0.DEPTNO = 30 OR EMP0.DEPTNO = 10",
    ),
    Case(
        "testReduceConstantsDup",
        "SELECT DEPT.DEPTNO FROM DEPT AS DEPT WHERE DEPT.DEPTNO = 7 AND DEPT.DEPTNO = 8",
        "SELECT t1.DEPTNO FROM DEPT AS t1 WHERE FALSE",
    ),
    Case(
        "testReduceConstantsDup2",
        "SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO = 7 AND EMP.DEPTNO = 8 AND EMP.EMPNO = 10 AND EMP.MGR IS NULL AND EMP.EMPNO = 10",
        "SELECT 10 AS EMPNO, t0.ENAME, t0.JOB, NULL AS MGR, t0.HIREDATE, t0.SAL, t0.COMM, t0.DEPTNO, t0.SLACKER FROM EMP AS t0 WHERE FALSE",
    ),
    Case(
        "testReduceConstantsEliminatesFilter",
        "SELECT * FROM (VALUES (1, 2)) AS t WHERE 1 + 2 > 3 + NULL",
        "SELECT * FROM (VALUES (1, 2)) AS t1 WHERE FALSE",
    ),
    Case(
        "testReduceConstantsIsNotNull",
        "SELECT EMP.EMPNO FROM EMP AS EMP WHERE EMP.EMPNO = 10 AND EMP.EMPNO IS NOT NULL",
        "SELECT EMP0.EMPNO FROM EMP AS EMP0 WHERE EMP0.EMPNO = 10",
    ),
    Case(
        "testReduceConstantsIsNull",
        "SELECT EMP.EMPNO FROM EMP AS EMP WHERE EMP.EMPNO = 10 AND EMP.EMPNO IS NULL",
        "SELECT t1.EMPNO FROM EMP AS t1 WHERE FALSE",
    ),
    Case(
        "testReduceConstantsNegated",
        "SELECT EMP.EMPNO FROM EMP AS EMP WHERE EMP.EMPNO = 10 AND NOT EMP.EMPNO = 10",
        "SELECT t1.EMPNO FROM EMP AS t1 WHERE FALSE",
    ),
    Case(
        "testReduceConstantsNegatedInverted",
        "SELECT EMP.EMPNO FROM EMP AS EMP WHERE EMP.EMPNO > 10 AND EMP.EMPNO <= 10",
        "SELECT t1.EMPNO FROM EMP AS t1 WHERE FALSE",
    ),
    Case(
        "testReduceConstantsNull",
        "SELECT * FROM (SELECT * FROM (SELECT NULL AS N FROM EMP AS EMP) AS t WHERE t.N IS NULL AND t.N IS NULL) AS t0 WHERE t0.N IS NULL",
        "SELECT NULL AS N FROM EMP AS EMP0",
    ),
    Case(
        "testReduceConstantsNullEqualsOne",
        "SELECT COUNT(*) FROM EMP AS EMP WHERE NULL = 1",
        "SELECT COUNT(*) FROM EMP AS t2 WHERE FALSE",
    ),
    Case(
        "testReduceConstantsProjectNullable",
        "SELECT EMP.MGR FROM EMP AS EMP WHERE EMP.MGR = 10",
        "SELECT CAST(10 AS INTEGER) AS MGR FROM EMP AS EMP0 WHERE EMP0.MGR = 10",
    ),
    Case(
        "testReduceConstantsRequiresExecutor",
        "SELECT * FROM (VALUES  (1, 2)) AS t WHERE 1 + 2 > 3 + NULL",
        "SELECT * FROM (VALUES  (1, 2)) AS t1 WHERE 1 + 2 > 3 + NULL",
    ),
    Case(
        "testReduceExpressionsNot",
        "SELECT * FROM (VALUES  (FALSE),  (TRUE)) AS t WHERE NOT t.COLUMN1",
        "SELECT * FROM (VALUES  (FALSE),  (TRUE)) AS t1 WHERE NOT t1.COLUMN1",
    ),
    Case(
        "testReduceNestedCaseWhen",
        "SELECT EMP.SAL FROM EMP AS EMP WHERE CASE WHEN EMP.SAL = 1000 THEN CASE WHEN EMP.SAL = 1000 THEN NULL ELSE 1 END IS NULL ELSE CASE WHEN EMP.SAL = 2000 THEN NULL ELSE 1 END IS NULL END IS TRUE",
        "SELECT EMP0.SAL FROM EMP AS EMP0 WHERE CASE WHEN EMP0.SAL = 1000 THEN EMP0.SAL = 1000 ELSE EMP0.SAL = 2000 END",
    ),
    Case(
        "testReduceNot",
        "SELECT * FROM (SELECT CASE WHEN EMP.SAL > 1000 THEN NULL ELSE FALSE END AS CASECOL FROM EMP AS EMP) AS t WHERE NOT t.CASECOL",
        "SELECT * FROM (SELECT CASE WHEN EMP0.SAL > 1000 THEN NULL ELSE FALSE END AS CASECOL FROM EMP AS EMP0) AS t1 WHERE NOT t1.CASECOL",
    ),
    Case(
        "testReduceNullableCase",
        "SELECT CASE WHEN 1 = 2 THEN CAST(t0.COLUMN1 AS INTEGER) ELSE 2 END FROM (VALUES  (1)) AS t LEFT JOIN (VALUES  (1)) AS t0 ON TRUE",
        "SELECT CAST(2 AS INTEGER) FROM (VALUES  (1)) AS t2 LEFT JOIN (VALUES  (1)) AS t3 ON TRUE",
    ),
    Case(
        "testReduceOrCaseWhen",
        "SELECT EMP.SAL FROM EMP AS EMP WHERE CASE WHEN EMP.SAL = 1000 THEN NULL ELSE 1 END IS NULL OR CASE WHEN EMP.SAL = 2000 THEN NULL ELSE 1 END IS NULL",
        "SELECT EMP0.SAL FROM EMP AS EMP0 WHERE EMP0.SAL = 1000 OR EMP0.SAL = 2000",
    ),
    Case(
        "testReduceValuesToEmpty",
        "SELECT t.COLUMN1 + t.COLUMN2 AS X, t.COLUMN2 AS B, t.COLUMN1 AS A FROM (VALUES  (10, 1),  (30, 7)) AS t WHERE t.COLUMN1 - t.COLUMN2 < 0",
        "SELECT * FROM (VALUES  (10, 1),  (30, 7)) AS t2 WHERE FALSE",
    ),
    Case(
        "testReduceValuesUnderFilter",
        "SELECT * FROM (VALUES  (10, 'x'),  (20, 'y')) AS t WHERE t.COLUMN1 < 15",
        "SELECT * FROM (VALUES  (10, 'x')) AS t1",
    ),
    Case(
        "testReduceValuesUnderProject",
        "SELECT t.COLUMN1 + t.COLUMN2 FROM (VALUES  (10, 1),  (20, 3)) AS t",
        "SELECT * FROM (VALUES  (11),  (23)) AS t1",
    ),
    Case(
        "testReduceValuesUnderProjectFilter",
        "SELECT t.COLUMN1 + t.COLUMN2 AS X, t.COLUMN2 AS B, t.COLUMN1 AS A FROM (VALUES  (10, 1), (30, 7), (20, 3)) AS t WHERE t.COLUMN1 - t.COLUMN2 < 21",
        "SELECT * FROM (VALUES  (11, 1, 10), (23, 3, 20)) AS t2",
    ),
    Case(
        "testRemoveSemiJoin",
        "SELECT EMP.ENAME FROM EMP AS EMP, DEPT AS DEPT WHERE EMP.DEPTNO = DEPT.DEPTNO",
        "SELECT EMP0.ENAME FROM EMP AS EMP0 INNER JOIN DEPT AS DEPT0 ON EMP0.DEPTNO = DEPT0.DEPTNO",
    ),
    Case(
        "testRemoveSemiJoinRight",
        "SELECT EMP.ENAME FROM EMP AS EMP, DEPT AS DEPT, EMP AS EMP0 WHERE EMP.DEPTNO = DEPT.DEPTNO AND DEPT.DEPTNO = EMP0.DEPTNO",
        "SELECT EMP1.ENAME FROM EMP AS EMP1 INNER JOIN DEPT AS DEPT0 ON EMP1.DEPTNO = DEPT0.DEPTNO INNER JOIN EMP AS EMP2 ON DEPT0.DEPTNO = EMP2.DEPTNO",
    ),
    Case(
        "testRemoveSemiJoinRightWithFilter",
        "SELECT EMP.ENAME FROM EMP AS EMP, DEPT AS DEPT, EMP AS EMP0 WHERE EMP.DEPTNO = DEPT.DEPTNO AND DEPT.DEPTNO = EMP0.DEPTNO AND DEPT.NAME = 'foo'",
        "SELECT EMP1.ENAME FROM EMP AS EMP1 INNER JOIN (SELECT * FROM DEPT AS DEPT0 WHERE DEPT0.NAME = 'foo') AS t1 ON EMP1.DEPTNO = t1.DEPTNO INNER JOIN EMP AS EMP2 ON t1.DEPTNO = EMP2.DEPTNO",
    ),
    Case(
        "testRemoveSemiJoinWithFilter",
        "SELECT EMP.ENAME FROM EMP AS EMP, DEPT AS DEPT WHERE EMP.DEPTNO = DEPT.DEPTNO AND EMP.ENAME = 'foo'",
        "SELECT t1.ENAME FROM (SELECT * FROM EMP AS EMP0 WHERE EMP0.ENAME = 'foo') AS t1 INNER JOIN DEPT AS DEPT0 ON t1.DEPTNO = DEPT0.DEPTNO",
    ),
    Case(
        "testRightOuterJoinSimplificationToInner",
        "SELECT 1 FROM DEPT AS DEPT RIGHT JOIN EMP AS EMP ON DEPT.DEPTNO = EMP.DEPTNO WHERE DEPT.NAME = 'Charlie'",
        "SELECT 1 FROM (SELECT * FROM DEPT AS DEPT0 WHERE DEPT0.NAME = 'Charlie') AS t1 INNER JOIN EMP AS EMP0 ON t1.DEPTNO = EMP0.DEPTNO",
    ),
    Case(
        "testSemiJoinReduceConstants",
        "SELECT t0.SAL FROM (SELECT * FROM (SELECT EMP.SAL, EMP.DEPTNO FROM EMP AS EMP) AS t WHERE t.DEPTNO = 200) AS t0 INNER JOIN (SELECT t1.DEPTNO FROM (SELECT EMP0.SAL, EMP0.DEPTNO FROM EMP AS EMP0) AS t1 WHERE t1.SAL = 100) AS t3 ON t0.DEPTNO = t3.DEPTNO",
        "SELECT t6.SAL FROM (SELECT * FROM (SELECT EMP1.SAL, EMP1.DEPTNO FROM EMP AS EMP1) AS t5 WHERE t5.DEPTNO = 200) AS t6 INNER JOIN (SELECT t7.DEPTNO FROM (SELECT EMP2.SAL, EMP2.DEPTNO FROM EMP AS EMP2) AS t7 WHERE t7.SAL = 100) AS t9 ON t6.DEPTNO = t9.DEPTNO",
    ),
    Case(
        "testSemiJoinRule",
        "SELECT DEPT.DEPTNO, DEPT.NAME FROM DEPT AS DEPT INNER JOIN (SELECT EMP.DEPTNO FROM EMP AS EMP WHERE EMP.SAL > 100 GROUP BY EMP.DEPTNO) AS t1 ON DEPT.DEPTNO = t1.DEPTNO",
        "SELECT * FROM DEPT AS DEPT0 INNER JOIN (SELECT EMP0.DEPTNO FROM EMP AS EMP0 WHERE EMP0.SAL > 100) AS t4 ON DEPT0.DEPTNO = t4.DEPTNO",
    ),
    Case(
        "testSemiJoinRuleExists",
        "SELECT DEPT.DEPTNO, DEPT.NAME FROM DEPT AS DEPT INNER JOIN (SELECT EMP.DEPTNO AS DEPTNO9 FROM EMP AS EMP WHERE EMP.SAL > 100 GROUP BY EMP.DEPTNO) AS t1 ON DEPT.DEPTNO = t1.DEPTNO9",
        "SELECT * FROM DEPT AS DEPT0 INNER JOIN (SELECT EMP0.DEPTNO AS DEPTNO9, TRUE AS X FROM EMP AS EMP0 WHERE EMP0.SAL > 100) AS t4 ON DEPT0.DEPTNO = t4.DEPTNO9",
    ),
    Case(
        "testSemiJoinRuleFull",
        "SELECT DEPT.DEPTNO, DEPT.NAME FROM DEPT AS DEPT FULL JOIN (SELECT EMP.DEPTNO FROM EMP AS EMP WHERE EMP.SAL > 100 GROUP BY EMP.DEPTNO) AS t1 ON DEPT.DEPTNO = t1.DEPTNO",
        "SELECT DEPT0.DEPTNO, DEPT0.NAME FROM DEPT AS DEPT0 FULL JOIN (SELECT EMP0.DEPTNO FROM EMP AS EMP0 WHERE EMP0.SAL > 100 GROUP BY EMP0.DEPTNO) AS t5 ON DEPT0.DEPTNO = t5.DEPTNO",
    ),
    Case(
        "testSemiJoinRuleLeft",
        "SELECT DEPT.NAME FROM DEPT AS DEPT LEFT JOIN (SELECT EMP.DEPTNO FROM EMP AS EMP WHERE EMP.SAL > 100 GROUP BY EMP.DEPTNO) AS t1 ON DEPT.DEPTNO = t1.DEPTNO",
        "SELECT DEPT0.NAME FROM DEPT AS DEPT0",
    ),
    Case(
        "testSemiJoinRuleRight",
        "SELECT DEPT.DEPTNO, DEPT.NAME FROM DEPT AS DEPT RIGHT JOIN (SELECT EMP.DEPTNO FROM EMP AS EMP WHERE EMP.SAL > 100 GROUP BY EMP.DEPTNO) AS t1 ON DEPT.DEPTNO = t1.DEPTNO",
        "SELECT DEPT0.DEPTNO, DEPT0.NAME FROM DEPT AS DEPT0 RIGHT JOIN (SELECT EMP0.DEPTNO FROM EMP AS EMP0 WHERE EMP0.SAL > 100 GROUP BY EMP0.DEPTNO) AS t5 ON DEPT0.DEPTNO = t5.DEPTNO",
    ),
    Case(
        "testSortJoinTranspose1",
        "SELECT * FROM EMP AS EMP LEFT JOIN DEPT AS DEPT ON EMP.DEPTNO = DEPT.DEPTNO ORDER BY EMP.SAL FETCH NEXT 10 ROWS ONLY",
        "SELECT * FROM (SELECT * FROM EMP AS EMP0 ORDER BY EMP0.SAL FETCH NEXT 10 ROWS ONLY) AS t2 LEFT JOIN DEPT AS DEPT0 ON t2.DEPTNO = DEPT0.DEPTNO ORDER BY t2.SAL FETCH NEXT 10 ROWS ONLY",
    ),
    Case(
        "testSortJoinTranspose2",
        "SELECT * FROM EMP AS EMP RIGHT JOIN DEPT AS DEPT ON EMP.DEPTNO = DEPT.DEPTNO ORDER BY DEPT.NAME",
        "SELECT * FROM EMP AS EMP0 RIGHT JOIN (SELECT * FROM DEPT AS DEPT0 ORDER BY DEPT0.NAME) AS t0 ON EMP0.DEPTNO = t0.DEPTNO ORDER BY t0.NAME",
    ),
    Case(
        "testSortJoinTranspose3",
        "SELECT * FROM EMP AS EMP LEFT JOIN DEPT AS DEPT ON EMP.DEPTNO = DEPT.DEPTNO ORDER BY EMP.SAL, DEPT.NAME FETCH NEXT 10 ROWS ONLY",
        "SELECT * FROM EMP AS EMP0 LEFT JOIN DEPT AS DEPT0 ON EMP0.DEPTNO = DEPT0.DEPTNO ORDER BY EMP0.SAL, DEPT0.NAME FETCH NEXT 10 ROWS ONLY",
    ),
    Case(
        "testSortJoinTranspose4",
        "SELECT * FROM EMP AS EMP RIGHT JOIN DEPT AS DEPT ON EMP.DEPTNO = DEPT.DEPTNO ORDER BY DEPT.NAME",
        "SELECT * FROM EMP AS EMP0 RIGHT JOIN (SELECT * FROM DEPT AS DEPT0 ORDER BY DEPT0.NAME) AS t0 ON EMP0.DEPTNO = t0.DEPTNO ORDER BY t0.NAME",
    ),
    Case(
        "testSortJoinTranspose5",
        "SELECT * FROM EMP AS EMP RIGHT JOIN (SELECT * FROM DEPT AS DEPT FETCH NEXT 10 ROWS ONLY) AS t ON EMP.DEPTNO = t.DEPTNO FETCH NEXT 10 ROWS ONLY",
        "SELECT * FROM EMP AS EMP0 RIGHT JOIN (SELECT * FROM DEPT AS DEPT0 FETCH NEXT 10 ROWS ONLY) AS t1 ON EMP0.DEPTNO = t1.DEPTNO FETCH NEXT 10 ROWS ONLY",
    ),
    Case(
        "testSortProjectTranspose1",
        "SELECT DEPT.DEPTNO, CAST(DEPT.DEPTNO AS INTEGER) FROM DEPT AS DEPT ORDER BY CAST(DEPT.DEPTNO AS INTEGER) OFFSET 1 ROWS",
        "SELECT t3.DEPTNO, CAST(t3.DEPTNO AS INTEGER) FROM (SELECT * FROM DEPT AS DEPT0 ORDER BY DEPT0.DEPTNO OFFSET 1 ROWS) AS t3",
    ),
    Case(
        "testSortProjectTranspose2",
        "SELECT DEPT.DEPTNO, CAST(DEPT.DEPTNO AS NUMERIC) FROM DEPT AS DEPT ORDER BY CAST(DEPT.DEPTNO AS NUMERIC) OFFSET 1 ROWS",
        "SELECT t3.DEPTNO, CAST(t3.DEPTNO AS NUMERIC) FROM (SELECT * FROM DEPT AS DEPT0 ORDER BY DEPT0.DEPTNO OFFSET 1 ROWS) AS t3",
    ),
    Case(
        "testSortProjectTranspose3",
        "SELECT DEPT.DEPTNO, CAST(DEPT.DEPTNO AS VARCHAR(10)) FROM DEPT AS DEPT ORDER BY CAST(DEPT.DEPTNO AS VARCHAR(10)) OFFSET 1 ROWS",
        "SELECT DEPT0.DEPTNO, CAST(DEPT0.DEPTNO AS VARCHAR(10)) FROM DEPT AS DEPT0 ORDER BY CAST(DEPT0.DEPTNO AS VARCHAR(10)) OFFSET 1 ROWS",
    ),
    Case(
        "testStrengthenJoinType",
        "SELECT * FROM DEPT AS DEPT LEFT JOIN EMP AS EMP ON DEPT.DEPTNO = EMP.DEPTNO WHERE EMP.DEPTNO IS NOT NULL AND EMP.SAL > 100",
        "SELECT DEPT0.DEPTNO, DEPT0.NAME, CAST(t0.EMPNO AS INTEGER) AS EMPNO, CAST(t0.ENAME AS VARCHAR(20)) AS ENAME, CAST(t0.JOB AS VARCHAR(10)) AS JOB, t0.MGR, t0.HIREDATE AS HIREDATE, CAST(t0.SAL AS INTEGER) AS SAL, CAST(t0.COMM AS INTEGER) AS COMM, CAST(t0.DEPTNO AS INTEGER) AS DEPTNO0, CAST(t0.SLACKER AS BOOLEAN) AS SLACKER FROM DEPT AS DEPT0 INNER JOIN (SELECT * FROM EMP AS EMP0 WHERE EMP0.SAL > 100) AS t0 ON DEPT0.DEPTNO = t0.DEPTNO",
    ),
    Case(
        "testSwapOuterJoin",
        "SELECT 1 FROM DEPT AS DEPT LEFT JOIN EMP AS EMP ON DEPT.DEPTNO = EMP.DEPTNO",
        "SELECT 1 FROM EMP AS EMP0 RIGHT JOIN DEPT AS DEPT0 ON EMP0.DEPTNO = DEPT0.DEPTNO",
    ),
    Case(
        "testTransitiveInferenceAggregate",
        "SELECT 1 FROM (SELECT EMP.DEPTNO, COUNT(*) FROM EMP AS EMP WHERE EMP.DEPTNO > 7 GROUP BY EMP.DEPTNO) AS t1 INNER JOIN EMP AS EMP0 ON t1.DEPTNO = EMP0.DEPTNO",
        "SELECT 1 FROM (SELECT EMP1.DEPTNO, COUNT(*) FROM EMP AS EMP1 WHERE EMP1.DEPTNO > 7 GROUP BY EMP1.DEPTNO) AS t5 INNER JOIN (SELECT * FROM EMP AS EMP2 WHERE EMP2.DEPTNO > 7) AS t6 ON t5.DEPTNO = t6.DEPTNO",
    ),
    Case(
        "testTransitiveInferenceComplexPredicate",
        "SELECT 1 FROM (SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO > 7 AND EMP.COMM = EMP.DEPTNO AND EMP.COMM + EMP.DEPTNO > EMP.COMM / 2) AS t INNER JOIN (SELECT * FROM EMP AS EMP0 WHERE EMP0.SAL = EMP0.DEPTNO) AS t0 ON t.DEPTNO = t0.DEPTNO",
        "SELECT 1 FROM (SELECT * FROM EMP AS EMP1 WHERE EMP1.DEPTNO > 7 AND EMP1.COMM = EMP1.DEPTNO AND EMP1.COMM + EMP1.DEPTNO > EMP1.COMM / 2) AS t2 INNER JOIN (SELECT * FROM (SELECT * FROM EMP AS EMP2 WHERE EMP2.SAL = EMP2.DEPTNO) AS t3 WHERE t3.DEPTNO > 7) AS t4 ON t2.DEPTNO = t4.DEPTNO",
    ),
    Case(
        "testTransitiveInferenceConjunctInPullUp",
        "SELECT 1 FROM (SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO = 7 OR EMP.DEPTNO = 9 OR EMP.DEPTNO > 10) AS t INNER JOIN EMP AS EMP0 ON t.DEPTNO = EMP0.DEPTNO",
        "SELECT 1 FROM (SELECT * FROM EMP AS EMP1 WHERE EMP1.DEPTNO = 7 OR EMP1.DEPTNO = 9 OR EMP1.DEPTNO > 10) AS t1 INNER JOIN (SELECT * FROM EMP AS EMP2 WHERE EMP2.DEPTNO = 7 OR EMP2.DEPTNO = 9 OR EMP2.DEPTNO > 10) AS t2 ON t1.DEPTNO = t2.DEPTNO",
    ),
    Case(
        "testTransitiveInferenceConstantEquiPredicate",
        "SELECT 1 FROM EMP AS EMP INNER JOIN EMP AS EMP0 ON EMP.DEPTNO = EMP0.DEPTNO",
        "SELECT 1 FROM EMP AS EMP1 INNER JOIN EMP AS EMP2 ON EMP1.DEPTNO = EMP2.DEPTNO",
    ),
    Case(
        "testTransitiveInferenceFullOuterJoin",
        "SELECT 1 FROM EMP AS EMP FULL JOIN EMP AS EMP0 ON EMP.DEPTNO = EMP0.DEPTNO WHERE EMP.DEPTNO > 7 AND EMP0.DEPTNO > 9",
        "SELECT 1 FROM EMP AS EMP1 FULL JOIN EMP AS EMP2 ON EMP1.DEPTNO = EMP2.DEPTNO WHERE EMP1.DEPTNO > 7 AND EMP2.DEPTNO > 9",
    ),
    Case(
        "testTransitiveInferenceJoin",
        "SELECT 1 FROM EMP AS EMP INNER JOIN (SELECT * FROM EMP AS EMP0 WHERE EMP0.DEPTNO > 7) AS t ON EMP.DEPTNO = t.DEPTNO",
        "SELECT 1 FROM (SELECT * FROM EMP AS EMP1 WHERE EMP1.DEPTNO > 7) AS t1 INNER JOIN (SELECT * FROM EMP AS EMP2 WHERE EMP2.DEPTNO > 7) AS t2 ON t1.DEPTNO = t2.DEPTNO",
    ),
    Case(
        "testTransitiveInferenceJoin3way",
        "SELECT 1 FROM (SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO > 7) AS t INNER JOIN EMP AS EMP0 ON t.DEPTNO = EMP0.DEPTNO INNER JOIN EMP AS EMP1 ON EMP0.DEPTNO = EMP1.DEPTNO",
        "SELECT 1 FROM (SELECT * FROM EMP AS EMP2 WHERE EMP2.DEPTNO > 7) AS t1 INNER JOIN (SELECT * FROM EMP AS EMP3 WHERE EMP3.DEPTNO > 7) AS t2 ON t1.DEPTNO = t2.DEPTNO INNER JOIN (SELECT * FROM EMP AS EMP4 WHERE EMP4.DEPTNO > 7) AS t3 ON t2.DEPTNO = t3.DEPTNO",
    ),
    Case(
        "testTransitiveInferenceJoin3wayAgg",
        "SELECT 1 FROM (SELECT EMP.DEPTNO, COUNT(*) FROM EMP AS EMP WHERE EMP.DEPTNO > 7 GROUP BY EMP.DEPTNO) AS t1 INNER JOIN EMP AS EMP0 ON t1.DEPTNO = EMP0.DEPTNO INNER JOIN EMP AS EMP1 ON EMP0.DEPTNO = EMP1.DEPTNO",
        "SELECT 1 FROM (SELECT EMP2.DEPTNO, COUNT(*) FROM EMP AS EMP2 WHERE EMP2.DEPTNO > 7 GROUP BY EMP2.DEPTNO) AS t5 INNER JOIN (SELECT * FROM EMP AS EMP3 WHERE EMP3.DEPTNO > 7) AS t6 ON t5.DEPTNO = t6.DEPTNO INNER JOIN (SELECT * FROM EMP AS EMP4 WHERE EMP4.DEPTNO > 7) AS t7 ON t6.DEPTNO = t7.DEPTNO",
    ),
    Case(
        "testTransitiveInferenceLeftOuterJoin",
        "SELECT 1 FROM (SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO > 7) AS t LEFT JOIN EMP AS EMP0 ON t.DEPTNO = EMP0.DEPTNO WHERE EMP0.DEPTNO > 9",
        "SELECT 1 FROM (SELECT * FROM EMP AS EMP1 WHERE EMP1.DEPTNO > 7) AS t2 LEFT JOIN (SELECT * FROM EMP AS EMP2 WHERE EMP2.DEPTNO > 7) AS t3 ON t2.DEPTNO = t3.DEPTNO WHERE t3.DEPTNO > 9",
    ),
    Case(
        "testTransitiveInferenceNoPullUpExprs",
        "SELECT 1 FROM (SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO = 7 OR EMP.DEPTNO = 9 OR EMP.COMM > 10) AS t INNER JOIN EMP AS EMP0 ON t.DEPTNO = EMP0.DEPTNO",
        "SELECT 1 FROM (SELECT * FROM EMP AS EMP1 WHERE EMP1.DEPTNO = 7 OR EMP1.DEPTNO = 9 OR EMP1.COMM > 10) AS t1 INNER JOIN EMP AS EMP2 ON t1.DEPTNO = EMP2.DEPTNO",
    ),
    Case(
        "testTransitiveInferencePreventProjectPullUp",
        "SELECT 1 FROM (SELECT EMP.COMM AS DEPTNO FROM EMP AS EMP WHERE EMP.DEPTNO > 7) AS t0 INNER JOIN EMP AS EMP0 ON t0.DEPTNO = EMP0.DEPTNO",
        "SELECT 1 FROM (SELECT EMP1.COMM AS DEPTNO FROM EMP AS EMP1 WHERE EMP1.DEPTNO > 7) AS t3 INNER JOIN EMP AS EMP2 ON t3.DEPTNO = EMP2.DEPTNO",
    ),
    Case(
        "testTransitiveInferenceProject",
        "SELECT 1 FROM (SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO > 7) AS t INNER JOIN EMP AS EMP0 ON t.DEPTNO = EMP0.DEPTNO",
        "SELECT 1 FROM (SELECT * FROM EMP AS EMP1 WHERE EMP1.DEPTNO > 7) AS t1 INNER JOIN (SELECT * FROM EMP AS EMP2 WHERE EMP2.DEPTNO > 7) AS t2 ON t1.DEPTNO = t2.DEPTNO",
    ),
    Case(
        "testTransitiveInferencePullUpThruAlias",
        "SELECT 1 FROM (SELECT EMP.COMM AS DEPTNO FROM EMP AS EMP WHERE EMP.COMM > 7) AS t0 INNER JOIN EMP AS EMP0 ON t0.DEPTNO = EMP0.DEPTNO",
        "SELECT 1 FROM (SELECT EMP1.COMM AS DEPTNO FROM EMP AS EMP1 WHERE EMP1.COMM > 7) AS t3 INNER JOIN (SELECT * FROM EMP AS EMP2 WHERE EMP2.DEPTNO > 7) AS t4 ON t3.DEPTNO = t4.DEPTNO",
    ),
    Case(
        "testTransitiveInferenceRightOuterJoin",
        "SELECT 1 FROM EMP AS EMP RIGHT JOIN (SELECT * FROM EMP AS EMP0 WHERE EMP0.DEPTNO > 9) AS t ON EMP.DEPTNO = t.DEPTNO WHERE EMP.DEPTNO > 7",
        "SELECT 1 FROM (SELECT * FROM EMP AS EMP1 WHERE EMP1.DEPTNO > 9) AS t2 RIGHT JOIN (SELECT * FROM EMP AS EMP2 WHERE EMP2.DEPTNO > 9) AS t3 ON t2.DEPTNO = t3.DEPTNO WHERE t2.DEPTNO > 7",
    ),
    Case(
        "testTransitiveInferenceUnion",
        "SELECT 1 FROM (SELECT EMP.DEPTNO FROM EMP AS EMP WHERE EMP.DEPTNO > 7 UNION ALL SELECT EMP0.DEPTNO FROM EMP AS EMP0 WHERE EMP0.DEPTNO > 10) AS t3 INNER JOIN EMP AS EMP1 ON t3.DEPTNO = EMP1.DEPTNO",
        "SELECT 1 FROM (SELECT EMP2.DEPTNO FROM EMP AS EMP2 WHERE EMP2.DEPTNO > 7 UNION ALL SELECT EMP3.DEPTNO FROM EMP AS EMP3 WHERE EMP3.DEPTNO > 10) AS t9 INNER JOIN (SELECT * FROM EMP AS EMP4 WHERE EMP4.DEPTNO > 7 OR EMP4.DEPTNO > 10) AS t10 ON t9.DEPTNO = t10.DEPTNO",
    ),
    Case(
        "testTransitiveInferenceUnion3way",
        "SELECT 1 FROM (SELECT * FROM (SELECT EMP.DEPTNO FROM EMP AS EMP WHERE EMP.DEPTNO > 7 UNION ALL SELECT EMP0.DEPTNO FROM EMP AS EMP0 WHERE EMP0.DEPTNO > 10) AS t3 UNION ALL SELECT EMP1.DEPTNO FROM EMP AS EMP1 WHERE EMP1.DEPTNO > 1) AS t6 INNER JOIN EMP AS EMP2 ON t6.DEPTNO = EMP2.DEPTNO",
        "SELECT 1 FROM (SELECT * FROM (SELECT EMP3.DEPTNO FROM EMP AS EMP3 WHERE EMP3.DEPTNO > 7 UNION ALL SELECT EMP4.DEPTNO FROM EMP AS EMP4 WHERE EMP4.DEPTNO > 10) AS t12 UNION ALL SELECT EMP5.DEPTNO FROM EMP AS EMP5 WHERE EMP5.DEPTNO > 1) AS t15 INNER JOIN (SELECT * FROM EMP AS EMP6 WHERE EMP6.DEPTNO > 7 OR EMP6.DEPTNO > 10 OR EMP6.DEPTNO > 1) AS t16 ON t15.DEPTNO = t16.DEPTNO",
    ),
    Case(
        "testTransitiveInferenceUnionAlwaysTrue",
        "SELECT * FROM (SELECT EMP.DEPTNO FROM EMP AS EMP WHERE EMP.DEPTNO < 4) AS t0 INNER JOIN (SELECT EMP0.DEPTNO FROM EMP AS EMP0 WHERE EMP0.DEPTNO > 7 UNION ALL SELECT EMP1.DEPTNO FROM EMP AS EMP1) AS t4 ON t0.DEPTNO = t4.DEPTNO",
        "SELECT * FROM (SELECT EMP2.DEPTNO FROM EMP AS EMP2 WHERE EMP2.DEPTNO < 4) AS t6 INNER JOIN (SELECT * FROM (SELECT EMP3.DEPTNO FROM EMP AS EMP3 WHERE EMP3.DEPTNO > 7 UNION ALL SELECT EMP4.DEPTNO FROM EMP AS EMP4) AS t10 WHERE t10.DEPTNO < 4) AS t11 ON t6.DEPTNO = t11.DEPTNO",
    ),
    Case(
        "testUnionMergeRule",
        "SELECT * FROM (SELECT DEPT.NAME, DEPT.DEPTNO FROM DEPT AS DEPT UNION ALL SELECT t4.NAME, t4.DEPTNO FROM (SELECT DEPT0.NAME, DEPT0.DEPTNO, COUNT(*) FROM DEPT AS DEPT0 GROUP BY DEPT0.NAME, DEPT0.DEPTNO UNION ALL SELECT DEPT1.NAME, DEPT1.DEPTNO, COUNT(*) FROM DEPT AS DEPT1 GROUP BY DEPT1.NAME, DEPT1.DEPTNO) AS t4) AS t6 UNION ALL SELECT DEPT2.NAME, DEPT2.DEPTNO FROM DEPT AS DEPT2",
        "SELECT DEPT3.NAME, DEPT3.DEPTNO FROM DEPT AS DEPT3 UNION ALL SELECT DEPT4.NAME, DEPT4.DEPTNO FROM DEPT AS DEPT4 GROUP BY DEPT4.NAME, DEPT4.DEPTNO UNION ALL SELECT DEPT5.NAME, DEPT5.DEPTNO FROM DEPT AS DEPT5 GROUP BY DEPT5.NAME, DEPT5.DEPTNO UNION ALL SELECT DEPT6.NAME, DEPT6.DEPTNO FROM DEPT AS DEPT6",
    ),
    Case(
        "testUnionToDistinctRule",
        "SELECT * FROM DEPT AS DEPT UNION SELECT * FROM DEPT AS DEPT0",
        "SELECT t0.DEPTNO, t0.NAME FROM (SELECT * FROM DEPT AS DEPT1 UNION ALL SELECT * FROM DEPT AS DEPT2) AS t0 GROUP BY t0.DEPTNO, t0.NAME",
    ),
    Case(
        "testWhereInCorrelated",
        "SELECT EMP.SAL FROM EMP AS EMP WHERE EMP.EMPNO IN (SELECT DEPT.DEPTNO FROM DEPT AS DEPT WHERE EMP.JOB = DEPT.NAME)",
        "SELECT EMP0.SAL FROM EMP AS EMP0 INNER JOIN DEPT AS DEPT0 ON EMP0.JOB = DEPT0.NAME AND EMP0.EMPNO = DEPT0.DEPTNO",
    ),
    Case(
        "testWhereNotInCorrelated",
        "SELECT EMP.SAL FROM EMP AS EMP WHERE EMP.EMPNO NOT IN (SELECT DEPT.DEPTNO FROM DEPT AS DEPT WHERE EMP.JOB = DEPT.NAME)",
        "SELECT EMP0.SAL FROM EMP AS EMP0 LEFT JOIN (SELECT DEPT0.NAME, COUNT(*) AS c, COUNT(DEPT0.DEPTNO) AS ck FROM DEPT AS DEPT0 GROUP BY DEPT0.NAME) AS t4 ON EMP0.JOB = t4.NAME LEFT JOIN (SELECT DEPT1.DEPTNO, TRUE AS i, DEPT1.NAME FROM DEPT AS DEPT1) AS t5 ON EMP0.EMPNO = t5.DEPTNO AND EMP0.JOB = t5.NAME WHERE NOT CASE WHEN t4.c = 0 THEN FALSE WHEN t5.i IS NOT NULL THEN TRUE WHEN t4.ck < t4.c THEN TRUE ELSE FALSE END",
    ),
    Case(
        "testWhereNotInCorrelated2",
        "SELECT * FROM EMP AS EMP WHERE EMP.EMPNO NOT IN (SELECT t.EMPNO FROM (SELECT EMP0.ENAME, EMP0.EMPNO, EMP0.SAL AS R FROM EMP AS EMP0) AS t WHERE t.R > 2 AND EMP.ENAME = t.ENAME)",
        "SELECT EMP1.EMPNO, EMP1.ENAME, EMP1.JOB, EMP1.MGR, EMP1.HIREDATE, EMP1.SAL, EMP1.COMM, EMP1.DEPTNO, EMP1.SLACKER FROM EMP AS EMP1 LEFT JOIN (SELECT t3.ENAME, COUNT(*) AS c, COUNT(t3.EMPNO) AS ck FROM (SELECT EMP2.ENAME, EMP2.EMPNO, EMP2.SAL AS R FROM EMP AS EMP2) AS t3 WHERE t3.R > 2 GROUP BY t3.ENAME) AS t7 ON EMP1.ENAME = t7.ENAME LEFT JOIN (SELECT t8.EMPNO, TRUE AS i, t8.ENAME FROM (SELECT EMP3.ENAME, EMP3.EMPNO, EMP3.SAL AS R FROM EMP AS EMP3) AS t8 WHERE t8.R > 2) AS t11 ON EMP1.EMPNO = t11.EMPNO AND EMP1.ENAME = t11.ENAME WHERE NOT CASE WHEN t7.c = 0 THEN FALSE WHEN t11.i IS NOT NULL THEN TRUE WHEN t7.ck < t7.c THEN TRUE ELSE FALSE END",
    ),
    Case(
        "testWhereOrSubQuery",
        "SELECT * FROM EMP AS EMP WHERE EMP.SAL = 4 OR EMP.EMPNO NOT IN (SELECT DEPT.DEPTNO FROM DEPT AS DEPT)",
        "SELECT EMP0.EMPNO, EMP0.ENAME, EMP0.JOB, EMP0.MGR, EMP0.HIREDATE, EMP0.SAL, EMP0.COMM, EMP0.DEPTNO, EMP0.SLACKER FROM EMP AS EMP0 LEFT JOIN (SELECT DEPT0.DEPTNO, TRUE AS i FROM DEPT AS DEPT0) AS t2 ON EMP0.EMPNO = t2.DEPTNO WHERE EMP0.SAL = 4 OR NOT CASE WHEN t2.i IS NOT NULL THEN TRUE ELSE FALSE END",
    ),
]
